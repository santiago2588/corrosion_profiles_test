2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,245:INFO:Initializing load_model()
2024-04-29 15:02:22,245:INFO:load_model(model_name=AI_models/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:04:03,964:INFO:Initializing load_model()
2024-04-29 15:04:03,964:INFO:load_model(model_name=C:/Users/mjkipsz2/OneDrive - The University of Manchester/Documents/VS codes/corrosion_profiles_test/AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:05:23,490:INFO:Initializing load_model()
2024-04-29 15:05:23,490:INFO:load_model(model_name=.../AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:27,836:INFO:Initializing load_model()
2024-04-29 15:06:27,836:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:54,289:INFO:Initializing load_model()
2024-04-29 15:06:54,289:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:54,960:INFO:Initializing predict_model()
2024-04-29 15:06:54,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AF24D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E0A893A0>)
2024-04-29 15:06:54,960:INFO:Checking exceptions
2024-04-29 15:06:54,960:INFO:Preloading libraries
2024-04-29 15:06:54,960:INFO:Set up data.
2024-04-29 15:06:54,979:INFO:Set up index.
2024-04-29 15:08:11,185:INFO:Initializing load_model()
2024-04-29 15:08:11,185:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:08:11,215:INFO:Initializing predict_model()
2024-04-29 15:08:11,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AB0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E26616C0>)
2024-04-29 15:08:11,215:INFO:Checking exceptions
2024-04-29 15:08:11,215:INFO:Preloading libraries
2024-04-29 15:08:11,216:INFO:Set up data.
2024-04-29 15:08:11,222:INFO:Set up index.
2024-04-29 15:08:54,042:INFO:Initializing load_model()
2024-04-29 15:08:54,042:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:08:54,070:INFO:Initializing predict_model()
2024-04-29 15:08:54,070:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0B5D990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E2661F80>)
2024-04-29 15:08:54,070:INFO:Checking exceptions
2024-04-29 15:08:54,070:INFO:Preloading libraries
2024-04-29 15:08:54,070:INFO:Set up data.
2024-04-29 15:08:54,081:INFO:Set up index.
2024-04-29 15:09:16,973:INFO:Initializing load_model()
2024-04-29 15:09:16,973:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:17,003:INFO:Initializing predict_model()
2024-04-29 15:09:17,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E25618D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FF600>)
2024-04-29 15:09:17,003:INFO:Checking exceptions
2024-04-29 15:09:17,003:INFO:Preloading libraries
2024-04-29 15:09:17,003:INFO:Set up data.
2024-04-29 15:09:17,019:INFO:Set up index.
2024-04-29 15:09:21,536:INFO:Initializing load_model()
2024-04-29 15:09:21,536:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:21,565:INFO:Initializing predict_model()
2024-04-29 15:09:21,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E279A950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FC860>)
2024-04-29 15:09:21,565:INFO:Checking exceptions
2024-04-29 15:09:21,565:INFO:Preloading libraries
2024-04-29 15:09:21,566:INFO:Set up data.
2024-04-29 15:09:21,573:INFO:Set up index.
2024-04-29 15:09:24,061:INFO:Initializing load_model()
2024-04-29 15:09:24,061:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:24,089:INFO:Initializing predict_model()
2024-04-29 15:09:24,089:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E2952510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FDE40>)
2024-04-29 15:09:24,089:INFO:Checking exceptions
2024-04-29 15:09:24,089:INFO:Preloading libraries
2024-04-29 15:09:24,089:INFO:Set up data.
2024-04-29 15:09:24,102:INFO:Set up index.
2024-04-29 15:09:26,095:INFO:Initializing load_model()
2024-04-29 15:09:26,095:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:26,125:INFO:Initializing predict_model()
2024-04-29 15:09:26,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262CC64C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FE480>)
2024-04-29 15:09:26,126:INFO:Checking exceptions
2024-04-29 15:09:26,126:INFO:Preloading libraries
2024-04-29 15:09:26,126:INFO:Set up data.
2024-04-29 15:09:26,133:INFO:Set up index.
2024-04-29 15:09:27,768:INFO:Initializing load_model()
2024-04-29 15:09:27,768:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:27,786:INFO:Initializing predict_model()
2024-04-29 15:09:27,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AC8510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FE8E0>)
2024-04-29 15:09:27,786:INFO:Checking exceptions
2024-04-29 15:09:27,786:INFO:Preloading libraries
2024-04-29 15:09:27,786:INFO:Set up data.
2024-04-29 15:09:27,796:INFO:Set up index.
2024-04-29 15:09:36,448:INFO:Initializing load_model()
2024-04-29 15:09:36,448:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:36,470:INFO:Initializing predict_model()
2024-04-29 15:09:36,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262CC64D590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FCB80>)
2024-04-29 15:09:36,470:INFO:Checking exceptions
2024-04-29 15:09:36,470:INFO:Preloading libraries
2024-04-29 15:09:36,471:INFO:Set up data.
2024-04-29 15:09:36,478:INFO:Set up index.
2024-04-29 15:10:02,495:INFO:Initializing load_model()
2024-04-29 15:10:02,495:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:10:02,517:INFO:Initializing predict_model()
2024-04-29 15:10:02,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E2939F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FCB80>)
2024-04-29 15:10:02,518:INFO:Checking exceptions
2024-04-29 15:10:02,518:INFO:Preloading libraries
2024-04-29 15:10:02,518:INFO:Set up data.
2024-04-29 15:10:02,527:INFO:Set up index.
2024-04-29 15:10:03,286:INFO:Initializing load_model()
2024-04-29 15:10:03,286:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:10:03,307:INFO:Initializing predict_model()
2024-04-29 15:10:03,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0B5EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FFE20>)
2024-04-29 15:10:03,307:INFO:Checking exceptions
2024-04-29 15:10:03,307:INFO:Preloading libraries
2024-04-29 15:10:03,307:INFO:Set up data.
2024-04-29 15:10:03,324:INFO:Set up index.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,195:INFO:Initializing load_model()
2024-04-30 10:11:44,196:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:11:45,121:INFO:Initializing predict_model()
2024-04-30 10:11:45,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E744A790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9041F80>)
2024-04-30 10:11:45,121:INFO:Checking exceptions
2024-04-30 10:11:45,121:INFO:Preloading libraries
2024-04-30 10:11:45,122:INFO:Set up data.
2024-04-30 10:11:45,123:INFO:Set up index.
2024-04-30 10:21:24,914:INFO:Initializing load_model()
2024-04-30 10:21:24,914:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:28,299:INFO:Initializing load_model()
2024-04-30 10:21:28,300:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:28,318:INFO:Initializing predict_model()
2024-04-30 10:21:28,320:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E938EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9391EE0>)
2024-04-30 10:21:28,320:INFO:Checking exceptions
2024-04-30 10:21:28,320:INFO:Preloading libraries
2024-04-30 10:21:28,320:INFO:Set up data.
2024-04-30 10:21:28,328:INFO:Set up index.
2024-04-30 10:21:29,437:INFO:Initializing load_model()
2024-04-30 10:21:29,437:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:58,317:INFO:Initializing load_model()
2024-04-30 10:21:58,317:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:58,345:INFO:Initializing predict_model()
2024-04-30 10:21:58,345:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E8FD2150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9392840>)
2024-04-30 10:21:58,346:INFO:Checking exceptions
2024-04-30 10:21:58,346:INFO:Preloading libraries
2024-04-30 10:21:58,346:INFO:Set up data.
2024-04-30 10:21:58,354:INFO:Set up index.
2024-04-30 10:22:02,060:INFO:Initializing load_model()
2024-04-30 10:22:02,060:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:22:03,593:INFO:Initializing load_model()
2024-04-30 10:22:03,594:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:56,123:INFO:Initializing load_model()
2024-04-30 10:23:56,123:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:00,647:INFO:Initializing load_model()
2024-04-30 10:24:00,647:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:00,670:INFO:Initializing predict_model()
2024-04-30 10:24:00,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:24:00,670:INFO:Checking exceptions
2024-04-30 10:24:00,671:INFO:Preloading libraries
2024-04-30 10:24:00,671:INFO:Set up data.
2024-04-30 10:24:00,681:INFO:Set up index.
2024-04-30 10:24:03,509:INFO:Initializing load_model()
2024-04-30 10:24:03,509:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:03,525:INFO:Initializing predict_model()
2024-04-30 10:24:03,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557FC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962480>)
2024-04-30 10:24:03,525:INFO:Checking exceptions
2024-04-30 10:24:03,525:INFO:Preloading libraries
2024-04-30 10:24:03,525:INFO:Set up data.
2024-04-30 10:24:03,545:INFO:Set up index.
2024-04-30 10:24:06,221:INFO:Initializing load_model()
2024-04-30 10:24:06,221:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:06,235:INFO:Initializing predict_model()
2024-04-30 10:24:06,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85583D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859634C0>)
2024-04-30 10:24:06,235:INFO:Checking exceptions
2024-04-30 10:24:06,235:INFO:Preloading libraries
2024-04-30 10:24:06,235:INFO:Set up data.
2024-04-30 10:24:06,250:INFO:Set up index.
2024-04-30 10:24:06,606:INFO:Initializing load_model()
2024-04-30 10:24:06,606:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:06,639:INFO:Initializing predict_model()
2024-04-30 10:24:06,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858C9F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961080>)
2024-04-30 10:24:06,639:INFO:Checking exceptions
2024-04-30 10:24:06,639:INFO:Preloading libraries
2024-04-30 10:24:06,640:INFO:Set up data.
2024-04-30 10:24:06,646:INFO:Set up index.
2024-04-30 10:24:07,216:INFO:Initializing load_model()
2024-04-30 10:24:07,216:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:07,235:INFO:Initializing predict_model()
2024-04-30 10:24:07,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85933C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEC93EAC0>)
2024-04-30 10:24:07,235:INFO:Checking exceptions
2024-04-30 10:24:07,235:INFO:Preloading libraries
2024-04-30 10:24:07,236:INFO:Set up data.
2024-04-30 10:24:07,243:INFO:Set up index.
2024-04-30 10:25:37,814:INFO:Initializing load_model()
2024-04-30 10:25:37,814:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:27:01,631:INFO:Initializing load_model()
2024-04-30 10:27:01,631:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:27:01,651:INFO:Initializing predict_model()
2024-04-30 10:27:01,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85581490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947060>)
2024-04-30 10:27:01,651:INFO:Checking exceptions
2024-04-30 10:27:01,651:INFO:Preloading libraries
2024-04-30 10:27:01,651:INFO:Set up data.
2024-04-30 10:27:01,658:INFO:Set up index.
2024-04-30 10:27:02,141:INFO:Initializing load_model()
2024-04-30 10:27:02,141:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:23,350:INFO:Initializing load_model()
2024-04-30 10:29:23,350:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:26,364:INFO:Initializing load_model()
2024-04-30 10:29:26,364:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:26,383:INFO:Initializing predict_model()
2024-04-30 10:29:26,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A01450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA713A0>)
2024-04-30 10:29:26,384:INFO:Checking exceptions
2024-04-30 10:29:26,384:INFO:Preloading libraries
2024-04-30 10:29:26,384:INFO:Set up data.
2024-04-30 10:29:26,392:INFO:Set up index.
2024-04-30 10:29:59,177:INFO:Initializing load_model()
2024-04-30 10:29:59,177:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:30:02,374:INFO:Initializing load_model()
2024-04-30 10:30:02,374:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:30:02,401:INFO:Initializing predict_model()
2024-04-30 10:30:02,402:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3F010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856449A0>)
2024-04-30 10:30:02,402:INFO:Checking exceptions
2024-04-30 10:30:02,402:INFO:Preloading libraries
2024-04-30 10:30:02,402:INFO:Set up data.
2024-04-30 10:30:02,410:INFO:Set up index.
2024-04-30 10:30:02,990:INFO:Initializing load_model()
2024-04-30 10:30:02,990:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:13,486:INFO:Initializing load_model()
2024-04-30 10:31:13,486:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:13,526:INFO:Initializing predict_model()
2024-04-30 10:31:13,526:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960680>)
2024-04-30 10:31:13,526:INFO:Checking exceptions
2024-04-30 10:31:13,526:INFO:Preloading libraries
2024-04-30 10:31:13,526:INFO:Set up data.
2024-04-30 10:31:13,531:INFO:Set up index.
2024-04-30 10:31:22,754:INFO:Initializing load_model()
2024-04-30 10:31:22,754:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:22,779:INFO:Initializing predict_model()
2024-04-30 10:31:22,779:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A65FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946700>)
2024-04-30 10:31:22,781:INFO:Checking exceptions
2024-04-30 10:31:22,781:INFO:Preloading libraries
2024-04-30 10:31:22,781:INFO:Set up data.
2024-04-30 10:31:22,788:INFO:Set up index.
2024-04-30 10:31:28,380:INFO:Initializing load_model()
2024-04-30 10:31:28,380:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:28,406:INFO:Initializing predict_model()
2024-04-30 10:31:28,406:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A383D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70EA0>)
2024-04-30 10:31:28,406:INFO:Checking exceptions
2024-04-30 10:31:28,406:INFO:Preloading libraries
2024-04-30 10:31:28,407:INFO:Set up data.
2024-04-30 10:31:28,416:INFO:Set up index.
2024-04-30 10:32:57,480:INFO:Initializing load_model()
2024-04-30 10:32:57,480:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:32:57,503:INFO:Initializing predict_model()
2024-04-30 10:32:57,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85986350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11A8E0>)
2024-04-30 10:32:57,503:INFO:Checking exceptions
2024-04-30 10:32:57,503:INFO:Preloading libraries
2024-04-30 10:32:57,503:INFO:Set up data.
2024-04-30 10:32:57,510:INFO:Set up index.
2024-04-30 10:33:14,336:INFO:Initializing load_model()
2024-04-30 10:33:14,336:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:33:14,360:INFO:Initializing predict_model()
2024-04-30 10:33:14,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85589F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859604A0>)
2024-04-30 10:33:14,360:INFO:Checking exceptions
2024-04-30 10:33:14,360:INFO:Preloading libraries
2024-04-30 10:33:14,360:INFO:Set up data.
2024-04-30 10:33:14,375:INFO:Set up index.
2024-04-30 10:34:01,978:INFO:Initializing load_model()
2024-04-30 10:34:01,978:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:01,996:INFO:Initializing predict_model()
2024-04-30 10:34:01,996:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85977190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856447C0>)
2024-04-30 10:34:01,996:INFO:Checking exceptions
2024-04-30 10:34:01,996:INFO:Preloading libraries
2024-04-30 10:34:01,996:INFO:Set up data.
2024-04-30 10:34:02,013:INFO:Set up index.
2024-04-30 10:34:29,977:INFO:Initializing load_model()
2024-04-30 10:34:29,977:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:30,004:INFO:Initializing predict_model()
2024-04-30 10:34:30,005:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85586D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856445E0>)
2024-04-30 10:34:30,005:INFO:Checking exceptions
2024-04-30 10:34:30,005:INFO:Preloading libraries
2024-04-30 10:34:30,005:INFO:Set up data.
2024-04-30 10:34:30,011:INFO:Set up index.
2024-04-30 10:34:46,974:INFO:Initializing load_model()
2024-04-30 10:34:46,974:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:47,006:INFO:Initializing predict_model()
2024-04-30 10:34:47,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF4043D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960C20>)
2024-04-30 10:34:47,006:INFO:Checking exceptions
2024-04-30 10:34:47,006:INFO:Preloading libraries
2024-04-30 10:34:47,006:INFO:Set up data.
2024-04-30 10:34:47,016:INFO:Set up index.
2024-04-30 10:36:00,755:INFO:Initializing load_model()
2024-04-30 10:36:00,756:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:36:00,777:INFO:Initializing predict_model()
2024-04-30 10:36:00,777:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A64250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961EE0>)
2024-04-30 10:36:00,778:INFO:Checking exceptions
2024-04-30 10:36:00,778:INFO:Preloading libraries
2024-04-30 10:36:00,778:INFO:Set up data.
2024-04-30 10:36:00,785:INFO:Set up index.
2024-04-30 10:36:13,846:INFO:Initializing load_model()
2024-04-30 10:36:13,846:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:36:13,870:INFO:Initializing predict_model()
2024-04-30 10:36:13,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D1BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960400>)
2024-04-30 10:36:13,870:INFO:Checking exceptions
2024-04-30 10:36:13,870:INFO:Preloading libraries
2024-04-30 10:36:13,870:INFO:Set up data.
2024-04-30 10:36:13,883:INFO:Set up index.
2024-04-30 10:37:10,500:INFO:Initializing load_model()
2024-04-30 10:37:10,500:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:10,528:INFO:Initializing predict_model()
2024-04-30 10:37:10,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:37:10,529:INFO:Checking exceptions
2024-04-30 10:37:10,529:INFO:Preloading libraries
2024-04-30 10:37:10,529:INFO:Set up data.
2024-04-30 10:37:10,535:INFO:Set up index.
2024-04-30 10:37:12,280:INFO:Initializing load_model()
2024-04-30 10:37:12,280:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:12,294:INFO:Initializing predict_model()
2024-04-30 10:37:12,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF405490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A858A3C40>)
2024-04-30 10:37:12,294:INFO:Checking exceptions
2024-04-30 10:37:12,294:INFO:Preloading libraries
2024-04-30 10:37:12,294:INFO:Set up data.
2024-04-30 10:37:12,304:INFO:Set up index.
2024-04-30 10:37:13,942:INFO:Initializing load_model()
2024-04-30 10:37:13,942:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:13,959:INFO:Initializing predict_model()
2024-04-30 10:37:13,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 10:37:13,959:INFO:Checking exceptions
2024-04-30 10:37:13,959:INFO:Preloading libraries
2024-04-30 10:37:13,959:INFO:Set up data.
2024-04-30 10:37:13,977:INFO:Set up index.
2024-04-30 10:37:15,612:INFO:Initializing load_model()
2024-04-30 10:37:15,612:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:15,652:INFO:Initializing predict_model()
2024-04-30 10:37:15,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946980>)
2024-04-30 10:37:15,652:INFO:Checking exceptions
2024-04-30 10:37:15,652:INFO:Preloading libraries
2024-04-30 10:37:15,652:INFO:Set up data.
2024-04-30 10:37:15,656:INFO:Set up index.
2024-04-30 10:37:17,299:INFO:Initializing load_model()
2024-04-30 10:37:17,299:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:17,315:INFO:Initializing predict_model()
2024-04-30 10:37:17,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85932710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963100>)
2024-04-30 10:37:17,315:INFO:Checking exceptions
2024-04-30 10:37:17,315:INFO:Preloading libraries
2024-04-30 10:37:17,315:INFO:Set up data.
2024-04-30 10:37:17,328:INFO:Set up index.
2024-04-30 10:37:18,787:INFO:Initializing load_model()
2024-04-30 10:37:18,787:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:18,804:INFO:Initializing predict_model()
2024-04-30 10:37:18,804:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85650E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947100>)
2024-04-30 10:37:18,804:INFO:Checking exceptions
2024-04-30 10:37:18,804:INFO:Preloading libraries
2024-04-30 10:37:18,804:INFO:Set up data.
2024-04-30 10:37:18,820:INFO:Set up index.
2024-04-30 10:37:20,909:INFO:Initializing load_model()
2024-04-30 10:37:20,909:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:20,938:INFO:Initializing predict_model()
2024-04-30 10:37:20,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83997E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:37:20,938:INFO:Checking exceptions
2024-04-30 10:37:20,939:INFO:Preloading libraries
2024-04-30 10:37:20,939:INFO:Set up data.
2024-04-30 10:37:20,945:INFO:Set up index.
2024-04-30 10:37:23,216:INFO:Initializing load_model()
2024-04-30 10:37:23,216:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:23,237:INFO:Initializing predict_model()
2024-04-30 10:37:23,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85975B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 10:37:23,237:INFO:Checking exceptions
2024-04-30 10:37:23,237:INFO:Preloading libraries
2024-04-30 10:37:23,237:INFO:Set up data.
2024-04-30 10:37:23,244:INFO:Set up index.
2024-04-30 10:37:25,202:INFO:Initializing load_model()
2024-04-30 10:37:25,202:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:25,218:INFO:Initializing predict_model()
2024-04-30 10:37:25,218:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85588A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:37:25,218:INFO:Checking exceptions
2024-04-30 10:37:25,224:INFO:Preloading libraries
2024-04-30 10:37:25,224:INFO:Set up data.
2024-04-30 10:37:25,231:INFO:Set up index.
2024-04-30 10:38:06,803:INFO:Initializing load_model()
2024-04-30 10:38:06,803:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:06,830:INFO:Initializing predict_model()
2024-04-30 10:38:06,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A00F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70860>)
2024-04-30 10:38:06,831:INFO:Checking exceptions
2024-04-30 10:38:06,831:INFO:Preloading libraries
2024-04-30 10:38:06,831:INFO:Set up data.
2024-04-30 10:38:06,839:INFO:Set up index.
2024-04-30 10:38:12,765:INFO:Initializing load_model()
2024-04-30 10:38:12,765:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:12,787:INFO:Initializing predict_model()
2024-04-30 10:38:12,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDCDA980>)
2024-04-30 10:38:12,787:INFO:Checking exceptions
2024-04-30 10:38:12,787:INFO:Preloading libraries
2024-04-30 10:38:12,787:INFO:Set up data.
2024-04-30 10:38:12,795:INFO:Set up index.
2024-04-30 10:38:15,580:INFO:Initializing load_model()
2024-04-30 10:38:15,580:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:15,596:INFO:Initializing predict_model()
2024-04-30 10:38:15,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85896C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 10:38:15,596:INFO:Checking exceptions
2024-04-30 10:38:15,596:INFO:Preloading libraries
2024-04-30 10:38:15,596:INFO:Set up data.
2024-04-30 10:38:15,610:INFO:Set up index.
2024-04-30 10:38:17,385:INFO:Initializing load_model()
2024-04-30 10:38:17,385:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:17,406:INFO:Initializing predict_model()
2024-04-30 10:38:17,407:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF404E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644180>)
2024-04-30 10:38:17,407:INFO:Checking exceptions
2024-04-30 10:38:17,407:INFO:Preloading libraries
2024-04-30 10:38:17,407:INFO:Set up data.
2024-04-30 10:38:17,413:INFO:Set up index.
2024-04-30 10:38:18,032:INFO:Initializing load_model()
2024-04-30 10:38:18,032:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:18,052:INFO:Initializing predict_model()
2024-04-30 10:38:18,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D0750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE1EB600>)
2024-04-30 10:38:18,052:INFO:Checking exceptions
2024-04-30 10:38:18,052:INFO:Preloading libraries
2024-04-30 10:38:18,053:INFO:Set up data.
2024-04-30 10:38:18,061:INFO:Set up index.
2024-04-30 10:38:19,074:INFO:Initializing load_model()
2024-04-30 10:38:19,074:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:19,110:INFO:Initializing predict_model()
2024-04-30 10:38:19,111:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A3B590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945D00>)
2024-04-30 10:38:19,111:INFO:Checking exceptions
2024-04-30 10:38:19,111:INFO:Preloading libraries
2024-04-30 10:38:19,111:INFO:Set up data.
2024-04-30 10:38:19,112:INFO:Set up index.
2024-04-30 10:38:21,694:INFO:Initializing load_model()
2024-04-30 10:38:21,694:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:21,709:INFO:Initializing predict_model()
2024-04-30 10:38:21,717:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85966CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947CE0>)
2024-04-30 10:38:21,717:INFO:Checking exceptions
2024-04-30 10:38:21,717:INFO:Preloading libraries
2024-04-30 10:38:21,717:INFO:Set up data.
2024-04-30 10:38:21,723:INFO:Set up index.
2024-04-30 10:41:20,884:INFO:Initializing load_model()
2024-04-30 10:41:20,884:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:41:20,914:INFO:Initializing predict_model()
2024-04-30 10:41:20,915:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A02D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859607C0>)
2024-04-30 10:41:20,915:INFO:Checking exceptions
2024-04-30 10:41:20,915:INFO:Preloading libraries
2024-04-30 10:41:20,915:INFO:Set up data.
2024-04-30 10:41:20,920:INFO:Set up index.
2024-04-30 10:42:34,149:INFO:Initializing load_model()
2024-04-30 10:42:34,149:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:34,168:INFO:Initializing predict_model()
2024-04-30 10:42:34,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 10:42:34,168:INFO:Checking exceptions
2024-04-30 10:42:34,168:INFO:Preloading libraries
2024-04-30 10:42:34,168:INFO:Set up data.
2024-04-30 10:42:34,182:INFO:Set up index.
2024-04-30 10:42:44,007:INFO:Initializing load_model()
2024-04-30 10:42:44,007:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:44,038:INFO:Initializing predict_model()
2024-04-30 10:42:44,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AC00>)
2024-04-30 10:42:44,039:INFO:Checking exceptions
2024-04-30 10:42:44,039:INFO:Preloading libraries
2024-04-30 10:42:44,039:INFO:Set up data.
2024-04-30 10:42:44,045:INFO:Set up index.
2024-04-30 10:42:47,223:INFO:Initializing load_model()
2024-04-30 10:42:47,223:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:47,243:INFO:Initializing predict_model()
2024-04-30 10:42:47,243:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11B9C0>)
2024-04-30 10:42:47,243:INFO:Checking exceptions
2024-04-30 10:42:47,244:INFO:Preloading libraries
2024-04-30 10:42:47,244:INFO:Set up data.
2024-04-30 10:42:47,250:INFO:Set up index.
2024-04-30 10:42:49,756:INFO:Initializing load_model()
2024-04-30 10:42:49,756:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:49,779:INFO:Initializing predict_model()
2024-04-30 10:42:49,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA713A0>)
2024-04-30 10:42:49,780:INFO:Checking exceptions
2024-04-30 10:42:49,780:INFO:Preloading libraries
2024-04-30 10:42:49,780:INFO:Set up data.
2024-04-30 10:42:49,786:INFO:Set up index.
2024-04-30 10:42:52,058:INFO:Initializing load_model()
2024-04-30 10:42:52,058:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:52,076:INFO:Initializing predict_model()
2024-04-30 10:42:52,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961620>)
2024-04-30 10:42:52,077:INFO:Checking exceptions
2024-04-30 10:42:52,077:INFO:Preloading libraries
2024-04-30 10:42:52,077:INFO:Set up data.
2024-04-30 10:42:52,084:INFO:Set up index.
2024-04-30 10:42:55,734:INFO:Initializing load_model()
2024-04-30 10:42:55,734:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:55,765:INFO:Initializing predict_model()
2024-04-30 10:42:55,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D2F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE118C20>)
2024-04-30 10:42:55,765:INFO:Checking exceptions
2024-04-30 10:42:55,765:INFO:Preloading libraries
2024-04-30 10:42:55,765:INFO:Set up data.
2024-04-30 10:42:55,772:INFO:Set up index.
2024-04-30 10:42:56,570:INFO:Initializing load_model()
2024-04-30 10:42:56,570:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:56,605:INFO:Initializing predict_model()
2024-04-30 10:42:56,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85591F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644E00>)
2024-04-30 10:42:56,606:INFO:Checking exceptions
2024-04-30 10:42:56,606:INFO:Preloading libraries
2024-04-30 10:42:56,606:INFO:Set up data.
2024-04-30 10:42:56,613:INFO:Set up index.
2024-04-30 10:43:00,391:INFO:Initializing load_model()
2024-04-30 10:43:00,391:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:00,409:INFO:Initializing predict_model()
2024-04-30 10:43:00,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8595BD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960540>)
2024-04-30 10:43:00,410:INFO:Checking exceptions
2024-04-30 10:43:00,410:INFO:Preloading libraries
2024-04-30 10:43:00,410:INFO:Set up data.
2024-04-30 10:43:00,417:INFO:Set up index.
2024-04-30 10:43:04,896:INFO:Initializing load_model()
2024-04-30 10:43:04,896:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:04,914:INFO:Initializing predict_model()
2024-04-30 10:43:04,914:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE1467D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:43:04,914:INFO:Checking exceptions
2024-04-30 10:43:04,914:INFO:Preloading libraries
2024-04-30 10:43:04,914:INFO:Set up data.
2024-04-30 10:43:04,919:INFO:Set up index.
2024-04-30 10:43:19,051:INFO:Initializing load_model()
2024-04-30 10:43:19,051:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:19,079:INFO:Initializing predict_model()
2024-04-30 10:43:19,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596F9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859474C0>)
2024-04-30 10:43:19,079:INFO:Checking exceptions
2024-04-30 10:43:19,079:INFO:Preloading libraries
2024-04-30 10:43:19,080:INFO:Set up data.
2024-04-30 10:43:19,090:INFO:Set up index.
2024-04-30 10:43:24,442:INFO:Initializing load_model()
2024-04-30 10:43:24,443:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:24,459:INFO:Initializing predict_model()
2024-04-30 10:43:24,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85591C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947100>)
2024-04-30 10:43:24,460:INFO:Checking exceptions
2024-04-30 10:43:24,460:INFO:Preloading libraries
2024-04-30 10:43:24,460:INFO:Set up data.
2024-04-30 10:43:24,467:INFO:Set up index.
2024-04-30 10:43:27,863:INFO:Initializing load_model()
2024-04-30 10:43:27,863:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:27,881:INFO:Initializing predict_model()
2024-04-30 10:43:27,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8582B350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947560>)
2024-04-30 10:43:27,883:INFO:Checking exceptions
2024-04-30 10:43:27,883:INFO:Preloading libraries
2024-04-30 10:43:27,883:INFO:Set up data.
2024-04-30 10:43:27,890:INFO:Set up index.
2024-04-30 10:43:35,958:INFO:Initializing load_model()
2024-04-30 10:43:35,958:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:35,975:INFO:Initializing predict_model()
2024-04-30 10:43:35,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A594D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A852B82C0>)
2024-04-30 10:43:35,976:INFO:Checking exceptions
2024-04-30 10:43:35,976:INFO:Preloading libraries
2024-04-30 10:43:35,976:INFO:Set up data.
2024-04-30 10:43:35,983:INFO:Set up index.
2024-04-30 10:43:37,369:INFO:Initializing load_model()
2024-04-30 10:43:37,369:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:37,388:INFO:Initializing predict_model()
2024-04-30 10:43:37,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558B6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644A40>)
2024-04-30 10:43:37,388:INFO:Checking exceptions
2024-04-30 10:43:37,388:INFO:Preloading libraries
2024-04-30 10:43:37,389:INFO:Set up data.
2024-04-30 10:43:37,394:INFO:Set up index.
2024-04-30 10:43:40,804:INFO:Initializing load_model()
2024-04-30 10:43:40,804:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:40,828:INFO:Initializing predict_model()
2024-04-30 10:43:40,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644E00>)
2024-04-30 10:43:40,828:INFO:Checking exceptions
2024-04-30 10:43:40,828:INFO:Preloading libraries
2024-04-30 10:43:40,828:INFO:Set up data.
2024-04-30 10:43:40,835:INFO:Set up index.
2024-04-30 10:43:44,781:INFO:Initializing load_model()
2024-04-30 10:43:44,781:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:44,808:INFO:Initializing predict_model()
2024-04-30 10:43:44,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858C8FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644720>)
2024-04-30 10:43:44,808:INFO:Checking exceptions
2024-04-30 10:43:44,808:INFO:Preloading libraries
2024-04-30 10:43:44,808:INFO:Set up data.
2024-04-30 10:43:44,816:INFO:Set up index.
2024-04-30 10:43:47,035:INFO:Initializing load_model()
2024-04-30 10:43:47,035:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:47,054:INFO:Initializing predict_model()
2024-04-30 10:43:47,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558BCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644B80>)
2024-04-30 10:43:47,054:INFO:Checking exceptions
2024-04-30 10:43:47,054:INFO:Preloading libraries
2024-04-30 10:43:47,054:INFO:Set up data.
2024-04-30 10:43:47,061:INFO:Set up index.
2024-04-30 10:43:48,024:INFO:Initializing load_model()
2024-04-30 10:43:48,024:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:48,042:INFO:Initializing predict_model()
2024-04-30 10:43:48,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 10:43:48,042:INFO:Checking exceptions
2024-04-30 10:43:48,042:INFO:Preloading libraries
2024-04-30 10:43:48,043:INFO:Set up data.
2024-04-30 10:43:48,049:INFO:Set up index.
2024-04-30 10:43:49,333:INFO:Initializing load_model()
2024-04-30 10:43:49,333:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:49,352:INFO:Initializing predict_model()
2024-04-30 10:43:49,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856447C0>)
2024-04-30 10:43:49,352:INFO:Checking exceptions
2024-04-30 10:43:49,352:INFO:Preloading libraries
2024-04-30 10:43:49,353:INFO:Set up data.
2024-04-30 10:43:49,358:INFO:Set up index.
2024-04-30 10:43:53,000:INFO:Initializing load_model()
2024-04-30 10:43:53,000:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:53,018:INFO:Initializing predict_model()
2024-04-30 10:43:53,019:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE1474D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85645080>)
2024-04-30 10:43:53,019:INFO:Checking exceptions
2024-04-30 10:43:53,019:INFO:Preloading libraries
2024-04-30 10:43:53,019:INFO:Set up data.
2024-04-30 10:43:53,025:INFO:Set up index.
2024-04-30 10:49:02,777:INFO:Initializing load_model()
2024-04-30 10:49:02,777:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:02,798:INFO:Initializing predict_model()
2024-04-30 10:49:02,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A855864D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC5760>)
2024-04-30 10:49:02,798:INFO:Checking exceptions
2024-04-30 10:49:02,798:INFO:Preloading libraries
2024-04-30 10:49:02,798:INFO:Set up data.
2024-04-30 10:49:02,799:INFO:Set up index.
2024-04-30 10:49:16,675:INFO:Initializing load_model()
2024-04-30 10:49:16,675:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:16,699:INFO:Initializing predict_model()
2024-04-30 10:49:16,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555FBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:49:16,699:INFO:Checking exceptions
2024-04-30 10:49:16,700:INFO:Preloading libraries
2024-04-30 10:49:16,700:INFO:Set up data.
2024-04-30 10:49:16,708:INFO:Set up index.
2024-04-30 10:49:17,271:INFO:Initializing load_model()
2024-04-30 10:49:17,271:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:17,301:INFO:Initializing predict_model()
2024-04-30 10:49:17,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596E710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE118C20>)
2024-04-30 10:49:17,301:INFO:Checking exceptions
2024-04-30 10:49:17,301:INFO:Preloading libraries
2024-04-30 10:49:17,303:INFO:Set up data.
2024-04-30 10:49:17,309:INFO:Set up index.
2024-04-30 10:49:20,301:INFO:Initializing load_model()
2024-04-30 10:49:20,301:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:20,330:INFO:Initializing predict_model()
2024-04-30 10:49:20,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AECEA6110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 10:49:20,332:INFO:Checking exceptions
2024-04-30 10:49:20,333:INFO:Preloading libraries
2024-04-30 10:49:20,333:INFO:Set up data.
2024-04-30 10:49:20,345:INFO:Set up index.
2024-04-30 10:50:32,500:INFO:Initializing load_model()
2024-04-30 10:50:32,500:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:50:32,521:INFO:Initializing predict_model()
2024-04-30 10:50:32,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE137C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB578EA0>)
2024-04-30 10:50:32,521:INFO:Checking exceptions
2024-04-30 10:50:32,521:INFO:Preloading libraries
2024-04-30 10:50:32,521:INFO:Set up data.
2024-04-30 10:50:32,535:INFO:Set up index.
2024-04-30 10:51:29,653:INFO:Initializing load_model()
2024-04-30 10:51:29,654:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:51:29,677:INFO:Initializing predict_model()
2024-04-30 10:51:29,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A839E76A0>)
2024-04-30 10:51:29,682:INFO:Checking exceptions
2024-04-30 10:51:29,682:INFO:Preloading libraries
2024-04-30 10:51:29,683:INFO:Set up data.
2024-04-30 10:51:29,693:INFO:Set up index.
2024-04-30 11:02:07,041:INFO:Initializing load_model()
2024-04-30 11:02:07,041:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:02:07,079:INFO:Initializing predict_model()
2024-04-30 11:02:07,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA700E0>)
2024-04-30 11:02:07,081:INFO:Checking exceptions
2024-04-30 11:02:07,081:INFO:Preloading libraries
2024-04-30 11:02:07,082:INFO:Set up data.
2024-04-30 11:02:07,089:INFO:Set up index.
2024-04-30 11:05:44,813:INFO:Initializing load_model()
2024-04-30 11:05:44,813:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:05:44,831:INFO:Initializing predict_model()
2024-04-30 11:05:44,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85967990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11BEC0>)
2024-04-30 11:05:44,831:INFO:Checking exceptions
2024-04-30 11:05:44,831:INFO:Preloading libraries
2024-04-30 11:05:44,832:INFO:Set up data.
2024-04-30 11:05:44,838:INFO:Set up index.
2024-04-30 11:11:11,051:INFO:Initializing load_model()
2024-04-30 11:11:11,051:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:11:11,092:INFO:Initializing predict_model()
2024-04-30 11:11:11,093:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557DBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71DA0>)
2024-04-30 11:11:11,093:INFO:Checking exceptions
2024-04-30 11:11:11,093:INFO:Preloading libraries
2024-04-30 11:11:11,093:INFO:Set up data.
2024-04-30 11:11:11,101:INFO:Set up index.
2024-04-30 11:11:54,267:INFO:Initializing load_model()
2024-04-30 11:11:54,280:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:11:54,301:INFO:Initializing predict_model()
2024-04-30 11:11:54,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85959E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962480>)
2024-04-30 11:11:54,301:INFO:Checking exceptions
2024-04-30 11:11:54,301:INFO:Preloading libraries
2024-04-30 11:11:54,302:INFO:Set up data.
2024-04-30 11:11:54,308:INFO:Set up index.
2024-04-30 11:13:05,833:INFO:Initializing load_model()
2024-04-30 11:13:05,833:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:13:05,855:INFO:Initializing predict_model()
2024-04-30 11:13:05,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85583D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70AE0>)
2024-04-30 11:13:05,856:INFO:Checking exceptions
2024-04-30 11:13:05,856:INFO:Preloading libraries
2024-04-30 11:13:05,856:INFO:Set up data.
2024-04-30 11:13:05,870:INFO:Set up index.
2024-04-30 11:24:31,231:INFO:Initializing load_model()
2024-04-30 11:24:31,231:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:24:31,251:INFO:Initializing predict_model()
2024-04-30 11:24:31,252:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85651490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945440>)
2024-04-30 11:24:31,252:INFO:Checking exceptions
2024-04-30 11:24:31,252:INFO:Preloading libraries
2024-04-30 11:24:31,252:INFO:Set up data.
2024-04-30 11:24:31,260:INFO:Set up index.
2024-04-30 11:30:53,209:INFO:Initializing load_model()
2024-04-30 11:30:53,209:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:30:53,234:INFO:Initializing predict_model()
2024-04-30 11:30:53,234:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A674D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859613A0>)
2024-04-30 11:30:53,234:INFO:Checking exceptions
2024-04-30 11:30:53,234:INFO:Preloading libraries
2024-04-30 11:30:53,234:INFO:Set up data.
2024-04-30 11:30:53,240:INFO:Set up index.
2024-04-30 11:32:28,929:INFO:Initializing load_model()
2024-04-30 11:32:28,929:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:32:28,948:INFO:Initializing predict_model()
2024-04-30 11:32:28,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A67890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71DA0>)
2024-04-30 11:32:28,948:INFO:Checking exceptions
2024-04-30 11:32:28,951:INFO:Preloading libraries
2024-04-30 11:32:28,952:INFO:Set up data.
2024-04-30 11:32:28,959:INFO:Set up index.
2024-04-30 11:32:34,365:INFO:Initializing load_model()
2024-04-30 11:32:34,365:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:32:34,400:INFO:Initializing predict_model()
2024-04-30 11:32:34,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70D60>)
2024-04-30 11:32:34,400:INFO:Checking exceptions
2024-04-30 11:32:34,401:INFO:Preloading libraries
2024-04-30 11:32:34,401:INFO:Set up data.
2024-04-30 11:32:34,406:INFO:Set up index.
2024-04-30 11:33:36,797:INFO:Initializing load_model()
2024-04-30 11:33:36,797:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:33:36,825:INFO:Initializing predict_model()
2024-04-30 11:33:36,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A5F650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532CB80>)
2024-04-30 11:33:36,826:INFO:Checking exceptions
2024-04-30 11:33:36,827:INFO:Preloading libraries
2024-04-30 11:33:36,827:INFO:Set up data.
2024-04-30 11:33:36,838:INFO:Set up index.
2024-04-30 11:34:21,881:INFO:Initializing load_model()
2024-04-30 11:34:21,881:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:34:21,897:INFO:Initializing predict_model()
2024-04-30 11:34:21,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A56850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA714E0>)
2024-04-30 11:34:21,897:INFO:Checking exceptions
2024-04-30 11:34:21,897:INFO:Preloading libraries
2024-04-30 11:34:21,897:INFO:Set up data.
2024-04-30 11:34:21,914:INFO:Set up index.
2024-04-30 11:36:54,804:INFO:Initializing load_model()
2024-04-30 11:36:54,804:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:36:54,836:INFO:Initializing predict_model()
2024-04-30 11:36:54,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85592650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859632E0>)
2024-04-30 11:36:54,837:INFO:Checking exceptions
2024-04-30 11:36:54,837:INFO:Preloading libraries
2024-04-30 11:36:54,837:INFO:Set up data.
2024-04-30 11:36:54,845:INFO:Set up index.
2024-04-30 11:37:22,161:INFO:Initializing load_model()
2024-04-30 11:37:22,161:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:37:22,183:INFO:Initializing predict_model()
2024-04-30 11:37:22,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A65E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A839E4CC0>)
2024-04-30 11:37:22,184:INFO:Checking exceptions
2024-04-30 11:37:22,184:INFO:Preloading libraries
2024-04-30 11:37:22,184:INFO:Set up data.
2024-04-30 11:37:22,189:INFO:Set up index.
2024-04-30 11:37:31,032:INFO:Initializing load_model()
2024-04-30 11:37:31,032:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:37:31,052:INFO:Initializing predict_model()
2024-04-30 11:37:31,053:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 11:37:31,053:INFO:Checking exceptions
2024-04-30 11:37:31,053:INFO:Preloading libraries
2024-04-30 11:37:31,053:INFO:Set up data.
2024-04-30 11:37:31,065:INFO:Set up index.
2024-04-30 11:39:39,805:INFO:Initializing load_model()
2024-04-30 11:39:39,805:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:39:39,853:INFO:Initializing predict_model()
2024-04-30 11:39:39,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF3DB0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE075080>)
2024-04-30 11:39:39,853:INFO:Checking exceptions
2024-04-30 11:39:39,853:INFO:Preloading libraries
2024-04-30 11:39:39,853:INFO:Set up data.
2024-04-30 11:39:39,860:INFO:Set up index.
2024-04-30 11:43:33,701:INFO:Initializing load_model()
2024-04-30 11:43:33,701:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:43:33,729:INFO:Initializing predict_model()
2024-04-30 11:43:33,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 11:43:33,730:INFO:Checking exceptions
2024-04-30 11:43:33,730:INFO:Preloading libraries
2024-04-30 11:43:33,730:INFO:Set up data.
2024-04-30 11:43:33,736:INFO:Set up index.
2024-04-30 11:57:52,840:INFO:Initializing load_model()
2024-04-30 11:57:52,840:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:57:52,875:INFO:Initializing predict_model()
2024-04-30 11:57:52,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85967B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644220>)
2024-04-30 11:57:52,875:INFO:Checking exceptions
2024-04-30 11:57:52,875:INFO:Preloading libraries
2024-04-30 11:57:52,875:INFO:Set up data.
2024-04-30 11:57:52,875:INFO:Set up index.
2024-04-30 11:58:20,532:INFO:Initializing load_model()
2024-04-30 11:58:20,532:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:58:20,566:INFO:Initializing predict_model()
2024-04-30 11:58:20,566:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C5E0>)
2024-04-30 11:58:20,566:INFO:Checking exceptions
2024-04-30 11:58:20,566:INFO:Preloading libraries
2024-04-30 11:58:20,566:INFO:Set up data.
2024-04-30 11:58:20,574:INFO:Set up index.
2024-04-30 11:58:34,811:INFO:Initializing load_model()
2024-04-30 11:58:34,811:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:58:34,827:INFO:Initializing predict_model()
2024-04-30 11:58:34,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A5F1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960D60>)
2024-04-30 11:58:34,827:INFO:Checking exceptions
2024-04-30 11:58:34,827:INFO:Preloading libraries
2024-04-30 11:58:34,827:INFO:Set up data.
2024-04-30 11:58:34,827:INFO:Set up index.
2024-04-30 11:59:30,291:INFO:Initializing load_model()
2024-04-30 11:59:30,291:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:30,310:INFO:Initializing predict_model()
2024-04-30 11:59:30,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644900>)
2024-04-30 11:59:30,310:INFO:Checking exceptions
2024-04-30 11:59:30,310:INFO:Preloading libraries
2024-04-30 11:59:30,310:INFO:Set up data.
2024-04-30 11:59:30,317:INFO:Set up index.
2024-04-30 11:59:31,527:INFO:Initializing load_model()
2024-04-30 11:59:31,527:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:31,547:INFO:Initializing predict_model()
2024-04-30 11:59:31,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA6EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70C20>)
2024-04-30 11:59:31,547:INFO:Checking exceptions
2024-04-30 11:59:31,547:INFO:Preloading libraries
2024-04-30 11:59:31,547:INFO:Set up data.
2024-04-30 11:59:31,555:INFO:Set up index.
2024-04-30 11:59:34,751:INFO:Initializing load_model()
2024-04-30 11:59:34,751:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:34,769:INFO:Initializing predict_model()
2024-04-30 11:59:34,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A55710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB925620>)
2024-04-30 11:59:34,769:INFO:Checking exceptions
2024-04-30 11:59:34,769:INFO:Preloading libraries
2024-04-30 11:59:34,769:INFO:Set up data.
2024-04-30 11:59:34,776:INFO:Set up index.
2024-04-30 11:59:38,676:INFO:Initializing load_model()
2024-04-30 11:59:38,676:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:38,696:INFO:Initializing predict_model()
2024-04-30 11:59:38,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF3D8AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70860>)
2024-04-30 11:59:38,696:INFO:Checking exceptions
2024-04-30 11:59:38,696:INFO:Preloading libraries
2024-04-30 11:59:38,696:INFO:Set up data.
2024-04-30 11:59:38,702:INFO:Set up index.
2024-04-30 12:01:35,107:INFO:Initializing load_model()
2024-04-30 12:01:35,107:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:01:35,134:INFO:Initializing predict_model()
2024-04-30 12:01:35,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 12:01:35,134:INFO:Checking exceptions
2024-04-30 12:01:35,135:INFO:Preloading libraries
2024-04-30 12:01:35,135:INFO:Set up data.
2024-04-30 12:01:35,136:INFO:Set up index.
2024-04-30 12:02:03,987:INFO:Initializing load_model()
2024-04-30 12:02:03,987:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:02:04,009:INFO:Initializing predict_model()
2024-04-30 12:02:04,010:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2D5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEF4396C0>)
2024-04-30 12:02:04,010:INFO:Checking exceptions
2024-04-30 12:02:04,010:INFO:Preloading libraries
2024-04-30 12:02:04,010:INFO:Set up data.
2024-04-30 12:02:04,014:INFO:Set up index.
2024-04-30 12:04:39,905:INFO:Initializing load_model()
2024-04-30 12:04:39,905:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:04:39,922:INFO:Initializing predict_model()
2024-04-30 12:04:39,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2F750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960EA0>)
2024-04-30 12:04:39,922:INFO:Checking exceptions
2024-04-30 12:04:39,922:INFO:Preloading libraries
2024-04-30 12:04:39,922:INFO:Set up data.
2024-04-30 12:04:39,936:INFO:Set up index.
2024-04-30 12:06:00,099:INFO:Initializing load_model()
2024-04-30 12:06:00,099:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:06:00,124:INFO:Initializing predict_model()
2024-04-30 12:06:00,124:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF404810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85645440>)
2024-04-30 12:06:00,124:INFO:Checking exceptions
2024-04-30 12:06:00,124:INFO:Preloading libraries
2024-04-30 12:06:00,125:INFO:Set up data.
2024-04-30 12:06:00,135:INFO:Set up index.
2024-04-30 12:06:22,417:INFO:Initializing load_model()
2024-04-30 12:06:22,417:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:06:22,440:INFO:Initializing predict_model()
2024-04-30 12:06:22,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A859650D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C900>)
2024-04-30 12:06:22,441:INFO:Checking exceptions
2024-04-30 12:06:22,441:INFO:Preloading libraries
2024-04-30 12:06:22,441:INFO:Set up data.
2024-04-30 12:06:22,447:INFO:Set up index.
2024-04-30 12:07:03,333:INFO:Initializing load_model()
2024-04-30 12:07:03,334:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:03,352:INFO:Initializing predict_model()
2024-04-30 12:07:03,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555E110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB925620>)
2024-04-30 12:07:03,352:INFO:Checking exceptions
2024-04-30 12:07:03,352:INFO:Preloading libraries
2024-04-30 12:07:03,352:INFO:Set up data.
2024-04-30 12:07:03,361:INFO:Set up index.
2024-04-30 12:07:15,633:INFO:Initializing load_model()
2024-04-30 12:07:15,633:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:15,652:INFO:Initializing predict_model()
2024-04-30 12:07:15,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85984B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11A160>)
2024-04-30 12:07:15,652:INFO:Checking exceptions
2024-04-30 12:07:15,652:INFO:Preloading libraries
2024-04-30 12:07:15,653:INFO:Set up data.
2024-04-30 12:07:15,656:INFO:Set up index.
2024-04-30 12:07:19,768:INFO:Initializing load_model()
2024-04-30 12:07:19,768:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:19,785:INFO:Initializing predict_model()
2024-04-30 12:07:19,785:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA714E0>)
2024-04-30 12:07:19,785:INFO:Checking exceptions
2024-04-30 12:07:19,785:INFO:Preloading libraries
2024-04-30 12:07:19,786:INFO:Set up data.
2024-04-30 12:07:19,792:INFO:Set up index.
2024-04-30 12:09:53,743:INFO:Initializing load_model()
2024-04-30 12:09:53,743:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:09:53,773:INFO:Initializing predict_model()
2024-04-30 12:09:53,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947920>)
2024-04-30 12:09:53,773:INFO:Checking exceptions
2024-04-30 12:09:53,773:INFO:Preloading libraries
2024-04-30 12:09:53,774:INFO:Set up data.
2024-04-30 12:09:53,783:INFO:Set up index.
2024-04-30 12:09:56,947:INFO:Initializing load_model()
2024-04-30 12:09:56,947:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:09:56,974:INFO:Initializing predict_model()
2024-04-30 12:09:56,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 12:09:56,974:INFO:Checking exceptions
2024-04-30 12:09:56,974:INFO:Preloading libraries
2024-04-30 12:09:56,974:INFO:Set up data.
2024-04-30 12:09:56,983:INFO:Set up index.
2024-04-30 12:10:11,878:INFO:Initializing load_model()
2024-04-30 12:10:11,878:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:11,899:INFO:Initializing predict_model()
2024-04-30 12:10:11,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A54750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70720>)
2024-04-30 12:10:11,899:INFO:Checking exceptions
2024-04-30 12:10:11,899:INFO:Preloading libraries
2024-04-30 12:10:11,900:INFO:Set up data.
2024-04-30 12:10:11,906:INFO:Set up index.
2024-04-30 12:10:16,010:INFO:Initializing load_model()
2024-04-30 12:10:16,010:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:16,043:INFO:Initializing predict_model()
2024-04-30 12:10:16,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85614A40>)
2024-04-30 12:10:16,044:INFO:Checking exceptions
2024-04-30 12:10:16,044:INFO:Preloading libraries
2024-04-30 12:10:16,044:INFO:Set up data.
2024-04-30 12:10:16,050:INFO:Set up index.
2024-04-30 12:10:19,853:INFO:Initializing load_model()
2024-04-30 12:10:19,853:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:19,880:INFO:Initializing predict_model()
2024-04-30 12:10:19,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A568D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70C20>)
2024-04-30 12:10:19,881:INFO:Checking exceptions
2024-04-30 12:10:19,881:INFO:Preloading libraries
2024-04-30 12:10:19,881:INFO:Set up data.
2024-04-30 12:10:19,888:INFO:Set up index.
2024-04-30 12:10:20,940:INFO:Initializing load_model()
2024-04-30 12:10:20,940:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:20,963:INFO:Initializing predict_model()
2024-04-30 12:10:20,963:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945440>)
2024-04-30 12:10:20,963:INFO:Checking exceptions
2024-04-30 12:10:20,963:INFO:Preloading libraries
2024-04-30 12:10:20,964:INFO:Set up data.
2024-04-30 12:10:20,970:INFO:Set up index.
2024-04-30 12:11:19,982:INFO:Initializing load_model()
2024-04-30 12:11:19,982:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:11:19,994:INFO:Initializing predict_model()
2024-04-30 12:11:19,994:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85985350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE075080>)
2024-04-30 12:11:19,994:INFO:Checking exceptions
2024-04-30 12:11:19,994:INFO:Preloading libraries
2024-04-30 12:11:19,994:INFO:Set up data.
2024-04-30 12:11:19,994:INFO:Set up index.
2024-04-30 12:11:26,084:INFO:Initializing load_model()
2024-04-30 12:11:26,084:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:11:26,102:INFO:Initializing predict_model()
2024-04-30 12:11:26,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A558D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11ADE0>)
2024-04-30 12:11:26,107:INFO:Checking exceptions
2024-04-30 12:11:26,107:INFO:Preloading libraries
2024-04-30 12:11:26,107:INFO:Set up data.
2024-04-30 12:11:26,112:INFO:Set up index.
2024-04-30 12:12:17,725:INFO:Initializing load_model()
2024-04-30 12:12:17,725:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:17,745:INFO:Initializing predict_model()
2024-04-30 12:12:17,745:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A859782D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB578D60>)
2024-04-30 12:12:17,745:INFO:Checking exceptions
2024-04-30 12:12:17,745:INFO:Preloading libraries
2024-04-30 12:12:17,746:INFO:Set up data.
2024-04-30 12:12:17,752:INFO:Set up index.
2024-04-30 12:12:22,730:INFO:Initializing load_model()
2024-04-30 12:12:22,730:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:22,758:INFO:Initializing predict_model()
2024-04-30 12:12:22,758:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557E450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947060>)
2024-04-30 12:12:22,758:INFO:Checking exceptions
2024-04-30 12:12:22,758:INFO:Preloading libraries
2024-04-30 12:12:22,759:INFO:Set up data.
2024-04-30 12:12:22,765:INFO:Set up index.
2024-04-30 12:12:42,638:INFO:Initializing load_model()
2024-04-30 12:12:42,638:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:42,668:INFO:Initializing predict_model()
2024-04-30 12:12:42,668:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857CCC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 12:12:42,668:INFO:Checking exceptions
2024-04-30 12:12:42,668:INFO:Preloading libraries
2024-04-30 12:12:42,668:INFO:Set up data.
2024-04-30 12:12:42,675:INFO:Set up index.
2024-04-30 12:13:42,056:INFO:Initializing load_model()
2024-04-30 12:13:42,057:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:42,066:INFO:Initializing predict_model()
2024-04-30 12:13:42,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85984A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C900>)
2024-04-30 12:13:42,066:INFO:Checking exceptions
2024-04-30 12:13:42,066:INFO:Preloading libraries
2024-04-30 12:13:42,066:INFO:Set up data.
2024-04-30 12:13:42,084:INFO:Set up index.
2024-04-30 12:13:48,059:INFO:Initializing load_model()
2024-04-30 12:13:48,059:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:48,077:INFO:Initializing predict_model()
2024-04-30 12:13:48,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963420>)
2024-04-30 12:13:48,078:INFO:Checking exceptions
2024-04-30 12:13:48,078:INFO:Preloading libraries
2024-04-30 12:13:48,078:INFO:Set up data.
2024-04-30 12:13:48,085:INFO:Set up index.
2024-04-30 12:13:52,067:INFO:Initializing load_model()
2024-04-30 12:13:52,067:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:52,099:INFO:Initializing predict_model()
2024-04-30 12:13:52,099:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2C750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70F40>)
2024-04-30 12:13:52,099:INFO:Checking exceptions
2024-04-30 12:13:52,099:INFO:Preloading libraries
2024-04-30 12:13:52,100:INFO:Set up data.
2024-04-30 12:13:52,108:INFO:Set up index.
2024-04-30 12:13:56,017:INFO:Initializing load_model()
2024-04-30 12:13:56,017:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:56,038:INFO:Initializing predict_model()
2024-04-30 12:13:56,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A856505D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960A40>)
2024-04-30 12:13:56,039:INFO:Checking exceptions
2024-04-30 12:13:56,039:INFO:Preloading libraries
2024-04-30 12:13:56,039:INFO:Set up data.
2024-04-30 12:13:56,048:INFO:Set up index.
2024-04-30 12:14:59,019:INFO:Initializing load_model()
2024-04-30 12:14:59,019:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:14:59,054:INFO:Initializing predict_model()
2024-04-30 12:14:59,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85581D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962B60>)
2024-04-30 12:14:59,054:INFO:Checking exceptions
2024-04-30 12:14:59,054:INFO:Preloading libraries
2024-04-30 12:14:59,055:INFO:Set up data.
2024-04-30 12:14:59,057:INFO:Set up index.
2024-04-30 12:15:02,995:INFO:Initializing load_model()
2024-04-30 12:15:02,995:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:03,027:INFO:Initializing predict_model()
2024-04-30 12:15:03,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF405510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947740>)
2024-04-30 12:15:03,027:INFO:Checking exceptions
2024-04-30 12:15:03,027:INFO:Preloading libraries
2024-04-30 12:15:03,027:INFO:Set up data.
2024-04-30 12:15:03,034:INFO:Set up index.
2024-04-30 12:15:08,038:INFO:Initializing load_model()
2024-04-30 12:15:08,038:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:08,071:INFO:Initializing predict_model()
2024-04-30 12:15:08,071:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85977410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946840>)
2024-04-30 12:15:08,071:INFO:Checking exceptions
2024-04-30 12:15:08,071:INFO:Preloading libraries
2024-04-30 12:15:08,072:INFO:Set up data.
2024-04-30 12:15:08,078:INFO:Set up index.
2024-04-30 12:15:10,493:INFO:Initializing load_model()
2024-04-30 12:15:10,493:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:10,516:INFO:Initializing predict_model()
2024-04-30 12:15:10,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A77A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960540>)
2024-04-30 12:15:10,516:INFO:Checking exceptions
2024-04-30 12:15:10,516:INFO:Preloading libraries
2024-04-30 12:15:10,516:INFO:Set up data.
2024-04-30 12:15:10,525:INFO:Set up index.
2024-04-30 12:15:12,021:INFO:Initializing load_model()
2024-04-30 12:15:12,021:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:12,040:INFO:Initializing predict_model()
2024-04-30 12:15:12,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963BA0>)
2024-04-30 12:15:12,040:INFO:Checking exceptions
2024-04-30 12:15:12,040:INFO:Preloading libraries
2024-04-30 12:15:12,040:INFO:Set up data.
2024-04-30 12:15:12,047:INFO:Set up index.
2024-04-30 12:16:48,511:INFO:Initializing load_model()
2024-04-30 12:16:48,512:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:16:48,532:INFO:Initializing predict_model()
2024-04-30 12:16:48,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AA20>)
2024-04-30 12:16:48,532:INFO:Checking exceptions
2024-04-30 12:16:48,532:INFO:Preloading libraries
2024-04-30 12:16:48,533:INFO:Set up data.
2024-04-30 12:16:48,540:INFO:Set up index.
2024-04-30 12:17:07,990:INFO:Initializing load_model()
2024-04-30 12:17:07,990:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:08,008:INFO:Initializing predict_model()
2024-04-30 12:17:08,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A3A310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71F80>)
2024-04-30 12:17:08,008:INFO:Checking exceptions
2024-04-30 12:17:08,008:INFO:Preloading libraries
2024-04-30 12:17:08,008:INFO:Set up data.
2024-04-30 12:17:08,015:INFO:Set up index.
2024-04-30 12:17:09,712:INFO:Initializing load_model()
2024-04-30 12:17:09,712:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:09,728:INFO:Initializing predict_model()
2024-04-30 12:17:09,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A25210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963060>)
2024-04-30 12:17:09,729:INFO:Checking exceptions
2024-04-30 12:17:09,729:INFO:Preloading libraries
2024-04-30 12:17:09,729:INFO:Set up data.
2024-04-30 12:17:09,735:INFO:Set up index.
2024-04-30 12:17:10,783:INFO:Initializing load_model()
2024-04-30 12:17:10,783:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:10,802:INFO:Initializing predict_model()
2024-04-30 12:17:10,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A67910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A83871760>)
2024-04-30 12:17:10,802:INFO:Checking exceptions
2024-04-30 12:17:10,802:INFO:Preloading libraries
2024-04-30 12:17:10,802:INFO:Set up data.
2024-04-30 12:17:10,809:INFO:Set up index.
2024-04-30 12:18:56,349:INFO:Initializing load_model()
2024-04-30 12:18:56,349:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:18:56,369:INFO:Initializing predict_model()
2024-04-30 12:18:56,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960900>)
2024-04-30 12:18:56,369:INFO:Checking exceptions
2024-04-30 12:18:56,369:INFO:Preloading libraries
2024-04-30 12:18:56,370:INFO:Set up data.
2024-04-30 12:18:56,371:INFO:Set up index.
2024-04-30 12:19:19,550:INFO:Initializing load_model()
2024-04-30 12:19:19,550:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:19,570:INFO:Initializing predict_model()
2024-04-30 12:19:19,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 12:19:19,571:INFO:Checking exceptions
2024-04-30 12:19:19,571:INFO:Preloading libraries
2024-04-30 12:19:19,571:INFO:Set up data.
2024-04-30 12:19:19,579:INFO:Set up index.
2024-04-30 12:19:36,830:INFO:Initializing load_model()
2024-04-30 12:19:36,830:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:36,847:INFO:Initializing predict_model()
2024-04-30 12:19:36,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563FDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962520>)
2024-04-30 12:19:36,847:INFO:Checking exceptions
2024-04-30 12:19:36,847:INFO:Preloading libraries
2024-04-30 12:19:36,848:INFO:Set up data.
2024-04-30 12:19:36,855:INFO:Set up index.
2024-04-30 12:19:43,700:INFO:Initializing load_model()
2024-04-30 12:19:43,700:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:43,741:INFO:Initializing predict_model()
2024-04-30 12:19:43,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85959B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 12:19:43,741:INFO:Checking exceptions
2024-04-30 12:19:43,741:INFO:Preloading libraries
2024-04-30 12:19:43,743:INFO:Set up data.
2024-04-30 12:19:43,749:INFO:Set up index.
2024-04-30 12:20:46,233:INFO:Initializing load_model()
2024-04-30 12:20:46,233:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:20:46,257:INFO:Initializing predict_model()
2024-04-30 12:20:46,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858A7CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 12:20:46,258:INFO:Checking exceptions
2024-04-30 12:20:46,258:INFO:Preloading libraries
2024-04-30 12:20:46,258:INFO:Set up data.
2024-04-30 12:20:46,264:INFO:Set up index.
2024-04-30 13:39:47,381:INFO:Initializing load_model()
2024-04-30 13:39:47,396:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 13:39:47,426:INFO:Initializing predict_model()
2024-04-30 13:39:47,426:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A04D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA702C0>)
2024-04-30 13:39:47,427:INFO:Checking exceptions
2024-04-30 13:39:47,427:INFO:Preloading libraries
2024-04-30 13:39:47,427:INFO:Set up data.
2024-04-30 13:39:47,434:INFO:Set up index.
2024-04-30 13:47:10,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:47:10,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:47:10,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:47:10,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:47:10,964:INFO:Initializing load_model()
2024-04-30 13:47:10,964:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 13:47:12,392:INFO:Initializing predict_model()
2024-04-30 13:47:12,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CA466850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CA405DA0>)
2024-04-30 13:47:12,392:INFO:Checking exceptions
2024-04-30 13:47:12,392:INFO:Preloading libraries
2024-04-30 13:47:12,392:INFO:Set up data.
2024-04-30 13:47:12,400:INFO:Set up index.
2024-04-30 14:23:20,093:INFO:Initializing load_model()
2024-04-30 14:23:20,093:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:23:20,133:INFO:Initializing predict_model()
2024-04-30 14:23:20,133:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CA45A910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39B060>)
2024-04-30 14:23:20,133:INFO:Checking exceptions
2024-04-30 14:23:20,134:INFO:Preloading libraries
2024-04-30 14:23:20,134:INFO:Set up data.
2024-04-30 14:23:20,137:INFO:Set up index.
2024-04-30 14:23:22,958:INFO:Initializing load_model()
2024-04-30 14:23:22,958:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:23:22,976:INFO:Initializing predict_model()
2024-04-30 14:23:22,977:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4DC9C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B4D96CA0>)
2024-04-30 14:23:22,977:INFO:Checking exceptions
2024-04-30 14:23:22,977:INFO:Preloading libraries
2024-04-30 14:23:22,977:INFO:Set up data.
2024-04-30 14:23:22,984:INFO:Set up index.
2024-04-30 14:23:24,546:INFO:Initializing load_model()
2024-04-30 14:23:24,546:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:23:24,565:INFO:Initializing predict_model()
2024-04-30 14:23:24,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4D98D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CBCD02C0>)
2024-04-30 14:23:24,565:INFO:Checking exceptions
2024-04-30 14:23:24,565:INFO:Preloading libraries
2024-04-30 14:23:24,565:INFO:Set up data.
2024-04-30 14:23:24,572:INFO:Set up index.
2024-04-30 14:38:56,859:INFO:Initializing load_model()
2024-04-30 14:38:56,859:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:38:56,895:INFO:Initializing predict_model()
2024-04-30 14:38:56,896:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC300190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39A480>)
2024-04-30 14:38:56,896:INFO:Checking exceptions
2024-04-30 14:38:56,896:INFO:Preloading libraries
2024-04-30 14:38:56,896:INFO:Set up data.
2024-04-30 14:38:56,901:INFO:Set up index.
2024-04-30 14:44:54,239:INFO:Initializing load_model()
2024-04-30 14:44:54,239:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:44:54,264:INFO:Initializing predict_model()
2024-04-30 14:44:54,264:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC2B0CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC2E05E0>)
2024-04-30 14:44:54,264:INFO:Checking exceptions
2024-04-30 14:44:54,264:INFO:Preloading libraries
2024-04-30 14:44:54,264:INFO:Set up data.
2024-04-30 14:44:54,273:INFO:Set up index.
2024-04-30 14:46:12,837:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:12,856:INFO:Initializing load_model()
2024-04-30 14:46:12,856:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:12,877:INFO:Initializing predict_model()
2024-04-30 14:46:12,878:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4DCB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46F02C0>)
2024-04-30 14:46:12,878:INFO:Checking exceptions
2024-04-30 14:46:12,878:INFO:Preloading libraries
2024-04-30 14:46:12,878:INFO:Set up data.
2024-04-30 14:46:12,885:INFO:Set up index.
2024-04-30 14:46:13,003:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:13,015:INFO:Initializing load_model()
2024-04-30 14:46:13,015:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:13,033:INFO:Initializing predict_model()
2024-04-30 14:46:13,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC2F7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C3A60>)
2024-04-30 14:46:13,033:INFO:Checking exceptions
2024-04-30 14:46:13,033:INFO:Preloading libraries
2024-04-30 14:46:13,033:INFO:Set up data.
2024-04-30 14:46:13,038:INFO:Set up index.
2024-04-30 14:46:13,149:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:13,149:INFO:Initializing load_model()
2024-04-30 14:46:13,149:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:13,166:INFO:Initializing predict_model()
2024-04-30 14:46:13,166:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CA466390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C3C40>)
2024-04-30 14:46:13,166:INFO:Checking exceptions
2024-04-30 14:46:13,166:INFO:Preloading libraries
2024-04-30 14:46:13,166:INFO:Set up data.
2024-04-30 14:46:13,166:INFO:Set up index.
2024-04-30 14:46:38,131:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:38,147:INFO:Initializing load_model()
2024-04-30 14:46:38,147:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:38,169:INFO:Initializing predict_model()
2024-04-30 14:46:38,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CA466E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC438C20>)
2024-04-30 14:46:38,170:INFO:Checking exceptions
2024-04-30 14:46:38,170:INFO:Preloading libraries
2024-04-30 14:46:38,170:INFO:Set up data.
2024-04-30 14:46:38,178:INFO:Set up index.
2024-04-30 14:46:38,291:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:38,308:INFO:Initializing load_model()
2024-04-30 14:46:38,308:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:38,323:INFO:Initializing predict_model()
2024-04-30 14:46:38,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC3AA7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC438AE0>)
2024-04-30 14:46:38,323:INFO:Checking exceptions
2024-04-30 14:46:38,323:INFO:Preloading libraries
2024-04-30 14:46:38,323:INFO:Set up data.
2024-04-30 14:46:38,329:INFO:Set up index.
2024-04-30 14:46:38,440:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:46:38,440:INFO:Initializing load_model()
2024-04-30 14:46:38,440:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:46:38,457:INFO:Initializing predict_model()
2024-04-30 14:46:38,457:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CBCE8990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC438E00>)
2024-04-30 14:46:38,457:INFO:Checking exceptions
2024-04-30 14:46:38,457:INFO:Preloading libraries
2024-04-30 14:46:38,457:INFO:Set up data.
2024-04-30 14:46:38,457:INFO:Set up index.
2024-04-30 14:49:29,347:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:49:29,356:INFO:Initializing load_model()
2024-04-30 14:49:29,356:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:49:29,386:INFO:Initializing predict_model()
2024-04-30 14:49:29,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B471FF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6017EC0>)
2024-04-30 14:49:29,386:INFO:Checking exceptions
2024-04-30 14:49:29,386:INFO:Preloading libraries
2024-04-30 14:49:29,387:INFO:Set up data.
2024-04-30 14:49:29,394:INFO:Set up index.
2024-04-30 14:49:29,510:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:49:29,518:INFO:Initializing load_model()
2024-04-30 14:49:29,518:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:49:29,533:INFO:Initializing predict_model()
2024-04-30 14:49:29,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC394D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B60151C0>)
2024-04-30 14:49:29,533:INFO:Checking exceptions
2024-04-30 14:49:29,533:INFO:Preloading libraries
2024-04-30 14:49:29,533:INFO:Set up data.
2024-04-30 14:49:29,536:INFO:Set up index.
2024-04-30 14:49:29,646:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:49:29,661:INFO:Initializing load_model()
2024-04-30 14:49:29,661:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:49:29,666:INFO:Initializing predict_model()
2024-04-30 14:49:29,666:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B46BE910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6015120>)
2024-04-30 14:49:29,666:INFO:Checking exceptions
2024-04-30 14:49:29,666:INFO:Preloading libraries
2024-04-30 14:49:29,666:INFO:Set up data.
2024-04-30 14:49:29,682:INFO:Set up index.
2024-04-30 14:53:08,213:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:53:08,227:INFO:Initializing load_model()
2024-04-30 14:53:08,227:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:53:08,250:INFO:Initializing predict_model()
2024-04-30 14:53:08,251:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC410790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C2DE0>)
2024-04-30 14:53:08,251:INFO:Checking exceptions
2024-04-30 14:53:08,252:INFO:Preloading libraries
2024-04-30 14:53:08,252:INFO:Set up data.
2024-04-30 14:53:08,261:INFO:Set up index.
2024-04-30 14:53:08,378:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:53:08,378:INFO:Initializing load_model()
2024-04-30 14:53:08,378:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:53:08,397:INFO:Initializing predict_model()
2024-04-30 14:53:08,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC3947D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39AFC0>)
2024-04-30 14:53:08,397:INFO:Checking exceptions
2024-04-30 14:53:08,397:INFO:Preloading libraries
2024-04-30 14:53:08,397:INFO:Set up data.
2024-04-30 14:53:08,412:INFO:Set up index.
2024-04-30 14:53:08,510:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:53:08,528:INFO:Initializing load_model()
2024-04-30 14:53:08,528:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:53:08,546:INFO:Initializing predict_model()
2024-04-30 14:53:08,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC410AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C2840>)
2024-04-30 14:53:08,547:INFO:Checking exceptions
2024-04-30 14:53:08,547:INFO:Preloading libraries
2024-04-30 14:53:08,547:INFO:Set up data.
2024-04-30 14:53:08,549:INFO:Set up index.
2024-04-30 14:56:01,291:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:56:01,300:INFO:Initializing load_model()
2024-04-30 14:56:01,300:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:56:01,320:INFO:Initializing predict_model()
2024-04-30 14:56:01,320:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B46BE610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6016340>)
2024-04-30 14:56:01,321:INFO:Checking exceptions
2024-04-30 14:56:01,321:INFO:Preloading libraries
2024-04-30 14:56:01,321:INFO:Set up data.
2024-04-30 14:56:01,328:INFO:Set up index.
2024-04-30 14:56:01,446:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:56:01,454:INFO:Initializing load_model()
2024-04-30 14:56:01,454:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:56:01,470:INFO:Initializing predict_model()
2024-04-30 14:56:01,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC3AF610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6015120>)
2024-04-30 14:56:01,471:INFO:Checking exceptions
2024-04-30 14:56:01,471:INFO:Preloading libraries
2024-04-30 14:56:01,471:INFO:Set up data.
2024-04-30 14:56:01,476:INFO:Set up index.
2024-04-30 14:56:01,588:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:56:01,595:INFO:Initializing load_model()
2024-04-30 14:56:01,595:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:56:01,610:INFO:Initializing predict_model()
2024-04-30 14:56:01,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4705F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6014900>)
2024-04-30 14:56:01,611:INFO:Checking exceptions
2024-04-30 14:56:01,611:INFO:Preloading libraries
2024-04-30 14:56:01,611:INFO:Set up data.
2024-04-30 14:56:01,616:INFO:Set up index.
2024-04-30 14:57:37,576:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:57:37,589:INFO:Initializing load_model()
2024-04-30 14:57:37,589:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:57:37,608:INFO:Initializing predict_model()
2024-04-30 14:57:37,608:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC157250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39AB60>)
2024-04-30 14:57:37,608:INFO:Checking exceptions
2024-04-30 14:57:37,609:INFO:Preloading libraries
2024-04-30 14:57:37,609:INFO:Set up data.
2024-04-30 14:57:37,616:INFO:Set up index.
2024-04-30 14:57:37,724:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:57:37,739:INFO:Initializing load_model()
2024-04-30 14:57:37,739:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:57:37,755:INFO:Initializing predict_model()
2024-04-30 14:57:37,755:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC395A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC37B560>)
2024-04-30 14:57:37,755:INFO:Checking exceptions
2024-04-30 14:57:37,755:INFO:Preloading libraries
2024-04-30 14:57:37,755:INFO:Set up data.
2024-04-30 14:57:37,763:INFO:Set up index.
2024-04-30 14:57:37,873:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:57:37,873:INFO:Initializing load_model()
2024-04-30 14:57:37,873:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:57:37,898:INFO:Initializing predict_model()
2024-04-30 14:57:37,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC447A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC398D60>)
2024-04-30 14:57:37,898:INFO:Checking exceptions
2024-04-30 14:57:37,898:INFO:Preloading libraries
2024-04-30 14:57:37,898:INFO:Set up data.
2024-04-30 14:57:37,898:INFO:Set up index.
2024-04-30 14:58:07,878:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:58:07,888:INFO:Initializing load_model()
2024-04-30 14:58:07,888:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:58:07,911:INFO:Initializing predict_model()
2024-04-30 14:58:07,911:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC38B5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6014900>)
2024-04-30 14:58:07,911:INFO:Checking exceptions
2024-04-30 14:58:07,911:INFO:Preloading libraries
2024-04-30 14:58:07,911:INFO:Set up data.
2024-04-30 14:58:07,919:INFO:Set up index.
2024-04-30 14:58:08,038:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:58:08,043:INFO:Initializing load_model()
2024-04-30 14:58:08,043:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:58:08,063:INFO:Initializing predict_model()
2024-04-30 14:58:08,063:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC0A4D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6017880>)
2024-04-30 14:58:08,063:INFO:Checking exceptions
2024-04-30 14:58:08,063:INFO:Preloading libraries
2024-04-30 14:58:08,063:INFO:Set up data.
2024-04-30 14:58:08,065:INFO:Set up index.
2024-04-30 14:58:08,176:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 14:58:08,193:INFO:Initializing load_model()
2024-04-30 14:58:08,193:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 14:58:08,205:INFO:Initializing predict_model()
2024-04-30 14:58:08,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC4410D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B60163E0>)
2024-04-30 14:58:08,208:INFO:Checking exceptions
2024-04-30 14:58:08,208:INFO:Preloading libraries
2024-04-30 14:58:08,208:INFO:Set up data.
2024-04-30 14:58:08,213:INFO:Set up index.
2024-04-30 15:00:22,639:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:00:22,654:INFO:Initializing load_model()
2024-04-30 15:00:22,654:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:00:22,667:INFO:Initializing predict_model()
2024-04-30 15:00:22,667:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC41A050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC37A5C0>)
2024-04-30 15:00:22,667:INFO:Checking exceptions
2024-04-30 15:00:22,667:INFO:Preloading libraries
2024-04-30 15:00:22,667:INFO:Set up data.
2024-04-30 15:00:22,680:INFO:Set up index.
2024-04-30 15:00:22,799:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:00:22,800:INFO:Initializing load_model()
2024-04-30 15:00:22,800:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:00:22,817:INFO:Initializing predict_model()
2024-04-30 15:00:22,817:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B46D9BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC37B6A0>)
2024-04-30 15:00:22,817:INFO:Checking exceptions
2024-04-30 15:00:22,817:INFO:Preloading libraries
2024-04-30 15:00:22,817:INFO:Set up data.
2024-04-30 15:00:22,817:INFO:Set up index.
2024-04-30 15:00:22,950:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:00:22,950:INFO:Initializing load_model()
2024-04-30 15:00:22,950:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:00:22,966:INFO:Initializing predict_model()
2024-04-30 15:00:22,966:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CA50EB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC37BBA0>)
2024-04-30 15:00:22,966:INFO:Checking exceptions
2024-04-30 15:00:22,966:INFO:Preloading libraries
2024-04-30 15:00:22,966:INFO:Set up data.
2024-04-30 15:00:22,966:INFO:Set up index.
2024-04-30 15:00:58,618:INFO:Initializing load_model()
2024-04-30 15:00:58,618:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:00:58,639:INFO:Initializing predict_model()
2024-04-30 15:00:58,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B471DFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CA449260>)
2024-04-30 15:00:58,640:INFO:Checking exceptions
2024-04-30 15:00:58,640:INFO:Preloading libraries
2024-04-30 15:00:58,640:INFO:Set up data.
2024-04-30 15:00:58,648:INFO:Set up index.
2024-04-30 15:01:09,275:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:01:09,283:INFO:Initializing load_model()
2024-04-30 15:01:09,284:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:01:09,305:INFO:Initializing predict_model()
2024-04-30 15:01:09,305:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4716810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C2AC0>)
2024-04-30 15:01:09,305:INFO:Checking exceptions
2024-04-30 15:01:09,305:INFO:Preloading libraries
2024-04-30 15:01:09,306:INFO:Set up data.
2024-04-30 15:01:09,313:INFO:Set up index.
2024-04-30 15:01:09,430:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:01:09,438:INFO:Initializing load_model()
2024-04-30 15:01:09,438:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:01:09,453:INFO:Initializing predict_model()
2024-04-30 15:01:09,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC413050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C2AC0>)
2024-04-30 15:01:09,454:INFO:Checking exceptions
2024-04-30 15:01:09,454:INFO:Preloading libraries
2024-04-30 15:01:09,454:INFO:Set up data.
2024-04-30 15:01:09,458:INFO:Set up index.
2024-04-30 15:01:09,572:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:113: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:01:09,572:INFO:Initializing load_model()
2024-04-30 15:01:09,572:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:01:09,590:INFO:Initializing predict_model()
2024-04-30 15:01:09,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4726890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C3240>)
2024-04-30 15:01:09,590:INFO:Checking exceptions
2024-04-30 15:01:09,590:INFO:Preloading libraries
2024-04-30 15:01:09,590:INFO:Set up data.
2024-04-30 15:01:09,590:INFO:Set up index.
2024-04-30 15:04:20,741:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:04:20,741:INFO:Initializing load_model()
2024-04-30 15:04:20,741:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:04:20,779:INFO:Initializing predict_model()
2024-04-30 15:04:20,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC457510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6016340>)
2024-04-30 15:04:20,780:INFO:Checking exceptions
2024-04-30 15:04:20,780:INFO:Preloading libraries
2024-04-30 15:04:20,780:INFO:Set up data.
2024-04-30 15:04:20,787:INFO:Set up index.
2024-04-30 15:06:42,677:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:06:42,687:INFO:Initializing load_model()
2024-04-30 15:06:42,687:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:06:42,706:INFO:Initializing predict_model()
2024-04-30 15:06:42,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC2DD910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C31A0>)
2024-04-30 15:06:42,706:INFO:Checking exceptions
2024-04-30 15:06:42,706:INFO:Preloading libraries
2024-04-30 15:06:42,706:INFO:Set up data.
2024-04-30 15:06:42,711:INFO:Set up index.
2024-04-30 15:09:41,994:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:09:42,009:INFO:Initializing load_model()
2024-04-30 15:09:42,009:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:09:42,033:INFO:Initializing predict_model()
2024-04-30 15:09:42,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B46DC290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39A5C0>)
2024-04-30 15:09:42,033:INFO:Checking exceptions
2024-04-30 15:09:42,033:INFO:Preloading libraries
2024-04-30 15:09:42,033:INFO:Set up data.
2024-04-30 15:09:42,042:INFO:Set up index.
2024-04-30 15:12:30,259:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:12:30,272:INFO:Initializing load_model()
2024-04-30 15:12:30,272:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:12:30,296:INFO:Initializing predict_model()
2024-04-30 15:12:30,297:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC41B790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6015E40>)
2024-04-30 15:12:30,297:INFO:Checking exceptions
2024-04-30 15:12:30,297:INFO:Preloading libraries
2024-04-30 15:12:30,297:INFO:Set up data.
2024-04-30 15:12:30,306:INFO:Set up index.
2024-04-30 15:12:30,428:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:12:30,436:INFO:Initializing load_model()
2024-04-30 15:12:30,436:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:12:30,451:INFO:Initializing predict_model()
2024-04-30 15:12:30,451:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC412850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B6015E40>)
2024-04-30 15:12:30,451:INFO:Checking exceptions
2024-04-30 15:12:30,451:INFO:Preloading libraries
2024-04-30 15:12:30,451:INFO:Set up data.
2024-04-30 15:12:30,458:INFO:Set up index.
2024-04-30 15:12:30,572:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:12:30,572:INFO:Initializing load_model()
2024-04-30 15:12:30,572:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:12:30,589:INFO:Initializing predict_model()
2024-04-30 15:12:30,589:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC410BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163B46C34C0>)
2024-04-30 15:12:30,589:INFO:Checking exceptions
2024-04-30 15:12:30,589:INFO:Preloading libraries
2024-04-30 15:12:30,589:INFO:Set up data.
2024-04-30 15:12:30,589:INFO:Set up index.
2024-04-30 15:14:51,946:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:14:51,946:INFO:Initializing load_model()
2024-04-30 15:14:51,946:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:14:51,975:INFO:Initializing predict_model()
2024-04-30 15:14:51,975:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC441B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC37B420>)
2024-04-30 15:14:51,975:INFO:Checking exceptions
2024-04-30 15:14:51,975:INFO:Preloading libraries
2024-04-30 15:14:51,976:INFO:Set up data.
2024-04-30 15:14:51,982:INFO:Set up index.
2024-04-30 15:14:52,101:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:14:52,109:INFO:Initializing load_model()
2024-04-30 15:14:52,109:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:14:52,138:INFO:Initializing predict_model()
2024-04-30 15:14:52,138:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC303850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC398CC0>)
2024-04-30 15:14:52,138:INFO:Checking exceptions
2024-04-30 15:14:52,138:INFO:Preloading libraries
2024-04-30 15:14:52,138:INFO:Set up data.
2024-04-30 15:14:52,144:INFO:Set up index.
2024-04-30 15:14:52,267:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:14:52,279:INFO:Initializing load_model()
2024-04-30 15:14:52,279:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:14:52,296:INFO:Initializing predict_model()
2024-04-30 15:14:52,296:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC396010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC399B20>)
2024-04-30 15:14:52,296:INFO:Checking exceptions
2024-04-30 15:14:52,296:INFO:Preloading libraries
2024-04-30 15:14:52,297:INFO:Set up data.
2024-04-30 15:14:52,303:INFO:Set up index.
2024-04-30 15:17:39,725:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:17:39,737:INFO:Initializing load_model()
2024-04-30 15:17:39,737:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:17:39,765:INFO:Initializing predict_model()
2024-04-30 15:17:39,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC3B8FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC39B920>)
2024-04-30 15:17:39,765:INFO:Checking exceptions
2024-04-30 15:17:39,765:INFO:Preloading libraries
2024-04-30 15:17:39,765:INFO:Set up data.
2024-04-30 15:17:39,774:INFO:Set up index.
2024-04-30 15:17:39,892:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:17:39,892:INFO:Initializing load_model()
2024-04-30 15:17:39,892:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:17:39,916:INFO:Initializing predict_model()
2024-04-30 15:17:39,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163CC38B710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CC399E40>)
2024-04-30 15:17:39,916:INFO:Checking exceptions
2024-04-30 15:17:39,916:INFO:Preloading libraries
2024-04-30 15:17:39,916:INFO:Set up data.
2024-04-30 15:17:39,922:INFO:Set up index.
2024-04-30 15:17:40,027:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-04-30 15:17:40,042:INFO:Initializing load_model()
2024-04-30 15:17:40,042:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 15:17:40,058:INFO:Initializing predict_model()
2024-04-30 15:17:40,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000163B4714D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000163CBCD02C0>)
2024-04-30 15:17:40,059:INFO:Checking exceptions
2024-04-30 15:17:40,059:INFO:Preloading libraries
2024-04-30 15:17:40,059:INFO:Set up data.
2024-04-30 15:17:40,064:INFO:Set up index.
2024-05-01 10:11:02,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:11:02,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:11:02,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:11:02,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:11:03,030:INFO:Initializing load_model()
2024-05-01 10:11:03,030:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:11:03,985:INFO:Initializing predict_model()
2024-05-01 10:11:03,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027385D12750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027385D18C20>)
2024-05-01 10:11:03,985:INFO:Checking exceptions
2024-05-01 10:11:03,985:INFO:Preloading libraries
2024-05-01 10:11:03,985:INFO:Set up data.
2024-05-01 10:11:03,991:INFO:Set up index.
2024-05-01 10:11:20,561:INFO:Initializing load_model()
2024-05-01 10:11:20,562:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:11:20,580:INFO:Initializing predict_model()
2024-05-01 10:11:20,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000273879594D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387CCC0E0>)
2024-05-01 10:11:20,581:INFO:Checking exceptions
2024-05-01 10:11:20,581:INFO:Preloading libraries
2024-05-01 10:11:20,581:INFO:Set up data.
2024-05-01 10:11:20,589:INFO:Set up index.
2024-05-01 10:11:31,598:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:11:31,611:INFO:Initializing load_model()
2024-05-01 10:11:31,612:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:11:31,632:INFO:Initializing predict_model()
2024-05-01 10:11:31,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387BC6610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387CAF4C0>)
2024-05-01 10:11:31,633:INFO:Checking exceptions
2024-05-01 10:11:31,633:INFO:Preloading libraries
2024-05-01 10:11:31,633:INFO:Set up data.
2024-05-01 10:11:31,639:INFO:Set up index.
2024-05-01 10:11:31,758:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:11:31,766:INFO:Initializing load_model()
2024-05-01 10:11:31,768:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:11:31,783:INFO:Initializing predict_model()
2024-05-01 10:11:31,783:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027385D28ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387CAF4C0>)
2024-05-01 10:11:31,784:INFO:Checking exceptions
2024-05-01 10:11:31,784:INFO:Preloading libraries
2024-05-01 10:11:31,784:INFO:Set up data.
2024-05-01 10:11:31,789:INFO:Set up index.
2024-05-01 10:11:31,905:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:11:31,913:INFO:Initializing load_model()
2024-05-01 10:11:31,913:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:11:31,929:INFO:Initializing predict_model()
2024-05-01 10:11:31,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387BA8E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387CAF560>)
2024-05-01 10:11:31,929:INFO:Checking exceptions
2024-05-01 10:11:31,929:INFO:Preloading libraries
2024-05-01 10:11:31,930:INFO:Set up data.
2024-05-01 10:11:31,935:INFO:Set up index.
2024-05-01 10:18:24,792:INFO:Initializing load_model()
2024-05-01 10:18:24,792:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:18:24,814:INFO:Initializing predict_model()
2024-05-01 10:18:24,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D4B010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387D5CE00>)
2024-05-01 10:18:24,814:INFO:Checking exceptions
2024-05-01 10:18:24,814:INFO:Preloading libraries
2024-05-01 10:18:24,814:INFO:Set up data.
2024-05-01 10:18:24,829:INFO:Set up index.
2024-05-01 10:18:30,927:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:18:30,937:INFO:Initializing load_model()
2024-05-01 10:18:30,937:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:18:30,959:INFO:Initializing predict_model()
2024-05-01 10:18:30,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002738795B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDF0680>)
2024-05-01 10:18:30,959:INFO:Checking exceptions
2024-05-01 10:18:30,959:INFO:Preloading libraries
2024-05-01 10:18:30,959:INFO:Set up data.
2024-05-01 10:18:30,968:INFO:Set up index.
2024-05-01 10:18:31,109:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:18:31,123:INFO:Initializing load_model()
2024-05-01 10:18:31,124:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:18:31,142:INFO:Initializing predict_model()
2024-05-01 10:18:31,142:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C702D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC3920>)
2024-05-01 10:18:31,142:INFO:Checking exceptions
2024-05-01 10:18:31,142:INFO:Preloading libraries
2024-05-01 10:18:31,142:INFO:Set up data.
2024-05-01 10:18:31,149:INFO:Set up index.
2024-05-01 10:18:31,281:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:18:31,282:INFO:Initializing load_model()
2024-05-01 10:18:31,282:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:18:31,311:INFO:Initializing predict_model()
2024-05-01 10:18:31,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027385D3C8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDF0680>)
2024-05-01 10:18:31,311:INFO:Checking exceptions
2024-05-01 10:18:31,311:INFO:Preloading libraries
2024-05-01 10:18:31,311:INFO:Set up data.
2024-05-01 10:18:31,320:INFO:Set up index.
2024-05-01 10:22:45,699:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:22:45,712:INFO:Initializing load_model()
2024-05-01 10:22:45,712:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:22:45,732:INFO:Initializing predict_model()
2024-05-01 10:22:45,733:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D27FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDF0900>)
2024-05-01 10:22:45,733:INFO:Checking exceptions
2024-05-01 10:22:45,733:INFO:Preloading libraries
2024-05-01 10:22:45,733:INFO:Set up data.
2024-05-01 10:22:45,742:INFO:Set up index.
2024-05-01 10:22:45,862:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:22:45,862:INFO:Initializing load_model()
2024-05-01 10:22:45,862:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:22:45,880:INFO:Initializing predict_model()
2024-05-01 10:22:45,880:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387CDCB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDF0900>)
2024-05-01 10:22:45,880:INFO:Checking exceptions
2024-05-01 10:22:45,880:INFO:Preloading libraries
2024-05-01 10:22:45,880:INFO:Set up data.
2024-05-01 10:22:45,880:INFO:Set up index.
2024-05-01 10:22:46,012:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:22:46,012:INFO:Initializing load_model()
2024-05-01 10:22:46,012:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:22:46,037:INFO:Initializing predict_model()
2024-05-01 10:22:46,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387AC3350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDF09A0>)
2024-05-01 10:22:46,037:INFO:Checking exceptions
2024-05-01 10:22:46,037:INFO:Preloading libraries
2024-05-01 10:22:46,037:INFO:Set up data.
2024-05-01 10:22:46,037:INFO:Set up index.
2024-05-01 10:26:14,021:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:26:14,021:INFO:Initializing load_model()
2024-05-01 10:26:14,035:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:26:14,055:INFO:Initializing predict_model()
2024-05-01 10:26:14,055:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000273F16E1390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC2B60>)
2024-05-01 10:26:14,055:INFO:Checking exceptions
2024-05-01 10:26:14,055:INFO:Preloading libraries
2024-05-01 10:26:14,055:INFO:Set up data.
2024-05-01 10:26:14,069:INFO:Set up index.
2024-05-01 10:26:14,186:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:26:14,186:INFO:Initializing load_model()
2024-05-01 10:26:14,186:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:26:14,211:INFO:Initializing predict_model()
2024-05-01 10:26:14,211:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000273EFDBFF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC2B60>)
2024-05-01 10:26:14,211:INFO:Checking exceptions
2024-05-01 10:26:14,211:INFO:Preloading libraries
2024-05-01 10:26:14,211:INFO:Set up data.
2024-05-01 10:26:14,220:INFO:Set up index.
2024-05-01 10:26:14,353:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:26:14,369:INFO:Initializing load_model()
2024-05-01 10:26:14,369:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:26:14,391:INFO:Initializing predict_model()
2024-05-01 10:26:14,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387CF9150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC22A0>)
2024-05-01 10:26:14,391:INFO:Checking exceptions
2024-05-01 10:26:14,391:INFO:Preloading libraries
2024-05-01 10:26:14,391:INFO:Set up data.
2024-05-01 10:26:14,392:INFO:Set up index.
2024-05-01 10:28:53,422:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:28:53,437:INFO:Initializing load_model()
2024-05-01 10:28:53,437:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:28:53,454:INFO:Initializing predict_model()
2024-05-01 10:28:53,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C5D210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387BA3920>)
2024-05-01 10:28:53,455:INFO:Checking exceptions
2024-05-01 10:28:53,455:INFO:Preloading libraries
2024-05-01 10:28:53,456:INFO:Set up data.
2024-05-01 10:28:53,461:INFO:Set up index.
2024-05-01 10:28:53,583:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:28:53,583:INFO:Initializing load_model()
2024-05-01 10:28:53,583:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:28:53,600:INFO:Initializing predict_model()
2024-05-01 10:28:53,600:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387CFB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387D4C360>)
2024-05-01 10:28:53,600:INFO:Checking exceptions
2024-05-01 10:28:53,600:INFO:Preloading libraries
2024-05-01 10:28:53,600:INFO:Set up data.
2024-05-01 10:28:53,614:INFO:Set up index.
2024-05-01 10:28:53,732:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:28:53,732:INFO:Initializing load_model()
2024-05-01 10:28:53,732:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:28:53,750:INFO:Initializing predict_model()
2024-05-01 10:28:53,750:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D16290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387D4D440>)
2024-05-01 10:28:53,750:INFO:Checking exceptions
2024-05-01 10:28:53,750:INFO:Preloading libraries
2024-05-01 10:28:53,750:INFO:Set up data.
2024-05-01 10:28:53,750:INFO:Set up index.
2024-05-01 10:31:13,788:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:31:13,802:INFO:Initializing load_model()
2024-05-01 10:31:13,802:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:31:13,822:INFO:Initializing predict_model()
2024-05-01 10:31:13,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D2CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273F1C972E0>)
2024-05-01 10:31:13,822:INFO:Checking exceptions
2024-05-01 10:31:13,823:INFO:Preloading libraries
2024-05-01 10:31:13,823:INFO:Set up data.
2024-05-01 10:31:13,825:INFO:Set up index.
2024-05-01 10:31:13,951:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:31:13,951:INFO:Initializing load_model()
2024-05-01 10:31:13,951:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:31:13,969:INFO:Initializing predict_model()
2024-05-01 10:31:13,969:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C5D990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC20C0>)
2024-05-01 10:31:13,969:INFO:Checking exceptions
2024-05-01 10:31:13,969:INFO:Preloading libraries
2024-05-01 10:31:13,969:INFO:Set up data.
2024-05-01 10:31:13,981:INFO:Set up index.
2024-05-01 10:31:14,100:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:31:14,102:INFO:Initializing load_model()
2024-05-01 10:31:14,102:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:31:14,123:INFO:Initializing predict_model()
2024-05-01 10:31:14,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C5D8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC3BA0>)
2024-05-01 10:31:14,123:INFO:Checking exceptions
2024-05-01 10:31:14,123:INFO:Preloading libraries
2024-05-01 10:31:14,124:INFO:Set up data.
2024-05-01 10:31:14,124:INFO:Set up index.
2024-05-01 10:34:23,952:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:34:23,952:INFO:Initializing load_model()
2024-05-01 10:34:23,952:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:34:23,985:INFO:Initializing predict_model()
2024-05-01 10:34:23,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D49910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027387C4FE20>)
2024-05-01 10:34:23,985:INFO:Checking exceptions
2024-05-01 10:34:23,986:INFO:Preloading libraries
2024-05-01 10:34:23,986:INFO:Set up data.
2024-05-01 10:34:23,989:INFO:Set up index.
2024-05-01 10:35:30,649:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:35:30,660:INFO:Initializing load_model()
2024-05-01 10:35:30,660:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:35:30,678:INFO:Initializing predict_model()
2024-05-01 10:35:30,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C5E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC2C00>)
2024-05-01 10:35:30,679:INFO:Checking exceptions
2024-05-01 10:35:30,679:INFO:Preloading libraries
2024-05-01 10:35:30,679:INFO:Set up data.
2024-05-01 10:35:30,686:INFO:Set up index.
2024-05-01 10:35:30,804:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:35:30,804:INFO:Initializing load_model()
2024-05-01 10:35:30,804:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:35:30,823:INFO:Initializing predict_model()
2024-05-01 10:35:30,823:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387CF1250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC20C0>)
2024-05-01 10:35:30,823:INFO:Checking exceptions
2024-05-01 10:35:30,823:INFO:Preloading libraries
2024-05-01 10:35:30,823:INFO:Set up data.
2024-05-01 10:35:30,838:INFO:Set up index.
2024-05-01 10:35:30,949:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:35:30,956:INFO:Initializing load_model()
2024-05-01 10:35:30,956:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:35:30,971:INFO:Initializing predict_model()
2024-05-01 10:35:30,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387C5FAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273EFDC3380>)
2024-05-01 10:35:30,971:INFO:Checking exceptions
2024-05-01 10:35:30,971:INFO:Preloading libraries
2024-05-01 10:35:30,971:INFO:Set up data.
2024-05-01 10:35:30,976:INFO:Set up index.
2024-05-01 10:38:00,600:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:38:00,616:INFO:Initializing load_model()
2024-05-01 10:38:00,616:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:38:00,638:INFO:Initializing predict_model()
2024-05-01 10:38:00,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027387D5B090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273F049B060>)
2024-05-01 10:38:00,638:INFO:Checking exceptions
2024-05-01 10:38:00,638:INFO:Preloading libraries
2024-05-01 10:38:00,639:INFO:Set up data.
2024-05-01 10:38:00,647:INFO:Set up index.
2024-05-01 10:38:00,761:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:38:00,761:INFO:Initializing load_model()
2024-05-01 10:38:00,761:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:38:00,778:INFO:Initializing predict_model()
2024-05-01 10:38:00,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000273F04C6DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273F049A0C0>)
2024-05-01 10:38:00,778:INFO:Checking exceptions
2024-05-01 10:38:00,778:INFO:Preloading libraries
2024-05-01 10:38:00,778:INFO:Set up data.
2024-05-01 10:38:00,778:INFO:Set up index.
2024-05-01 10:38:00,891:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 10:38:00,907:INFO:Initializing load_model()
2024-05-01 10:38:00,907:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 10:38:00,927:INFO:Initializing predict_model()
2024-05-01 10:38:00,927:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000273F16B4B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273F049B420>)
2024-05-01 10:38:00,927:INFO:Checking exceptions
2024-05-01 10:38:00,927:INFO:Preloading libraries
2024-05-01 10:38:00,927:INFO:Set up data.
2024-05-01 10:38:00,932:INFO:Set up index.
2024-05-01 10:51:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:51:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:51:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 10:51:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 11:28:51,927:INFO:Initializing load_model()
2024-05-01 11:28:51,927:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 11:28:52,878:INFO:Initializing predict_model()
2024-05-01 11:28:52,878:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F3038358D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F36E00B7E0>)
2024-05-01 11:28:52,878:INFO:Checking exceptions
2024-05-01 11:28:52,878:INFO:Preloading libraries
2024-05-01 11:28:52,878:INFO:Set up data.
2024-05-01 11:28:52,888:INFO:Set up index.
2024-05-01 11:28:56,274:INFO:Initializing load_model()
2024-05-01 11:28:56,274:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 11:28:56,290:INFO:Initializing predict_model()
2024-05-01 11:28:56,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F3056830D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F36E00BD80>)
2024-05-01 11:28:56,290:INFO:Checking exceptions
2024-05-01 11:28:56,290:INFO:Preloading libraries
2024-05-01 11:28:56,290:INFO:Set up data.
2024-05-01 11:28:56,307:INFO:Set up index.
2024-05-01 11:28:56,638:INFO:Initializing load_model()
2024-05-01 11:28:56,638:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 11:28:56,656:INFO:Initializing predict_model()
2024-05-01 11:28:56,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F3056B5050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F305759D00>)
2024-05-01 11:28:56,656:INFO:Checking exceptions
2024-05-01 11:28:56,656:INFO:Preloading libraries
2024-05-01 11:28:56,657:INFO:Set up data.
2024-05-01 11:28:56,666:INFO:Set up index.
2024-05-01 11:28:57,443:INFO:Initializing load_model()
2024-05-01 11:28:57,443:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 11:28:57,460:INFO:Initializing predict_model()
2024-05-01 11:28:57,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F305397DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F36DAF6E80>)
2024-05-01 11:28:57,460:INFO:Checking exceptions
2024-05-01 11:28:57,460:INFO:Preloading libraries
2024-05-01 11:28:57,460:INFO:Set up data.
2024-05-01 11:28:57,478:INFO:Set up index.
2024-05-01 12:30:23,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 12:30:23,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 12:30:23,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 12:30:23,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 12:30:23,745:INFO:Initializing load_model()
2024-05-01 12:30:23,745:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 12:30:23,785:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 12:30:23,786:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 12:30:25,753:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 12:30:25,781:INFO:Initializing predict_model()
2024-05-01 12:30:25,781:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023527A42190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023527A01D00>)
2024-05-01 12:30:25,781:INFO:Checking exceptions
2024-05-01 12:30:25,781:INFO:Preloading libraries
2024-05-01 12:30:25,782:INFO:Set up data.
2024-05-01 12:30:25,794:INFO:Set up index.
2024-05-01 12:30:32,718:INFO:Initializing load_model()
2024-05-01 12:30:32,718:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 12:30:32,720:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:30:32,723:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:30:32,750:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}


2024-05-01 12:30:32,776:INFO:Initializing predict_model()
2024-05-01 12:30:32,776:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002352990BF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023529996AC0>)
2024-05-01 12:30:32,777:INFO:Checking exceptions
2024-05-01 12:30:32,777:INFO:Preloading libraries
2024-05-01 12:30:32,778:INFO:Set up data.
2024-05-01 12:30:32,789:INFO:Set up index.
2024-05-01 12:30:46,146:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 12:30:46,172:INFO:Initializing load_model()
2024-05-01 12:30:46,173:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 12:30:46,174:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:30:46,176:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:30:46,186:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}


2024-05-01 12:30:46,215:INFO:Initializing predict_model()
2024-05-01 12:30:46,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235298D7810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023529995300>)
2024-05-01 12:30:46,216:INFO:Checking exceptions
2024-05-01 12:30:46,216:INFO:Preloading libraries
2024-05-01 12:30:46,216:INFO:Set up data.
2024-05-01 12:30:46,232:INFO:Set up index.
2024-05-01 12:33:02,699:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 12:33:02,717:INFO:Initializing load_model()
2024-05-01 12:33:02,717:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 12:33:02,717:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:33:02,717:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 12:33:02,727:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}


2024-05-01 13:18:36,470:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 13:18:36,485:INFO:Initializing load_model()
2024-05-01 13:18:36,485:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:18:36,494:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 13:18:36,495:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 13:18:36,502:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}


2024-05-01 13:18:36,513:INFO:Initializing predict_model()
2024-05-01 13:18:36,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023527A40990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023511B53B00>)
2024-05-01 13:18:36,516:INFO:Checking exceptions
2024-05-01 13:18:36,517:INFO:Preloading libraries
2024-05-01 13:18:36,518:INFO:Set up data.
2024-05-01 13:18:36,525:INFO:Set up index.
2024-05-01 13:19:19,276:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning:

Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)


2024-05-01 13:19:19,289:INFO:Initializing load_model()
2024-05-01 13:19:19,290:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:19:19,299:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 13:19:19,300:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations


2024-05-01 13:19:19,311:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}


2024-05-01 13:19:19,322:INFO:Initializing predict_model()
2024-05-01 13:19:19,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023529C0FC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023511B52E80>)
2024-05-01 13:19:19,323:INFO:Checking exceptions
2024-05-01 13:19:19,323:INFO:Preloading libraries
2024-05-01 13:19:19,323:INFO:Set up data.
2024-05-01 13:19:19,332:INFO:Set up index.
2024-05-01 13:21:27,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 13:21:27,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 13:21:27,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 13:21:27,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 13:21:31,320:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
  parameters[j] = float(data[i].iloc[int(np.where(data["Well"] == j)[0])])

2024-05-01 13:21:31,337:INFO:Initializing load_model()
2024-05-01 13:21:31,337:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:21:31,351:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:31,351:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:32,144:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 13:21:32,162:INFO:Initializing predict_model()
2024-05-01 13:21:32,162:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023204FA6A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232033B7D80>)
2024-05-01 13:21:32,162:INFO:Checking exceptions
2024-05-01 13:21:32,162:INFO:Preloading libraries
2024-05-01 13:21:32,163:INFO:Set up data.
2024-05-01 13:21:32,172:INFO:Set up index.
2024-05-01 13:21:51,223:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
  parameters[j] = float(data[i].iloc[int(np.where(data["Well"] == j)[0])])

2024-05-01 13:21:51,223:INFO:Initializing load_model()
2024-05-01 13:21:51,223:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:21:51,223:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,223:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,244:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 13:21:51,254:INFO:Initializing predict_model()
2024-05-01 13:21:51,254:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023204FA5210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002326D503A60>)
2024-05-01 13:21:51,254:INFO:Checking exceptions
2024-05-01 13:21:51,254:INFO:Preloading libraries
2024-05-01 13:21:51,255:INFO:Set up data.
2024-05-01 13:21:51,262:INFO:Set up index.
2024-05-01 13:21:51,374:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
  parameters[j] = float(data[i].iloc[int(np.where(data["Well"] == j)[0])])

2024-05-01 13:21:51,387:INFO:Initializing load_model()
2024-05-01 13:21:51,387:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:21:51,387:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,387:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,400:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 13:21:51,404:INFO:Initializing predict_model()
2024-05-01 13:21:51,404:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023203410490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023204D49DA0>)
2024-05-01 13:21:51,404:INFO:Checking exceptions
2024-05-01 13:21:51,404:INFO:Preloading libraries
2024-05-01 13:21:51,404:INFO:Set up data.
2024-05-01 13:21:51,404:INFO:Set up index.
2024-05-01 13:21:51,520:WARNING:C:\Users\mjkipsz2\OneDrive - The University of Manchester\Documents\VS codes\corrosion_profiles_test\pages\03_Calculo_Batch.py:114: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
  parameters[j] = float(data[i].iloc[int(np.where(data["Well"] == j)[0])])

2024-05-01 13:21:51,537:INFO:Initializing load_model()
2024-05-01 13:21:51,537:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-05-01 13:21:51,537:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,537:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-01 13:21:51,537:WARNING:C:\Users\mjkipsz2\AppData\Local\anaconda3\envs\pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.2.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.7', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.7', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 13:21:51,556:INFO:Initializing predict_model()
2024-05-01 13:21:51,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023204F83DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002326D530400>)
2024-05-01 13:21:51,556:INFO:Checking exceptions
2024-05-01 13:21:51,556:INFO:Preloading libraries
2024-05-01 13:21:51,556:INFO:Set up data.
2024-05-01 13:21:51,558:INFO:Set up index.
