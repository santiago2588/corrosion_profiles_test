2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 15:02:22,245:INFO:Initializing load_model()
2024-04-29 15:02:22,245:INFO:load_model(model_name=AI_models/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:04:03,964:INFO:Initializing load_model()
2024-04-29 15:04:03,964:INFO:load_model(model_name=C:/Users/mjkipsz2/OneDrive - The University of Manchester/Documents/VS codes/corrosion_profiles_test/AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:05:23,490:INFO:Initializing load_model()
2024-04-29 15:05:23,490:INFO:load_model(model_name=.../AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:27,836:INFO:Initializing load_model()
2024-04-29 15:06:27,836:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid.pkl, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:54,289:INFO:Initializing load_model()
2024-04-29 15:06:54,289:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:06:54,960:INFO:Initializing predict_model()
2024-04-29 15:06:54,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AF24D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E0A893A0>)
2024-04-29 15:06:54,960:INFO:Checking exceptions
2024-04-29 15:06:54,960:INFO:Preloading libraries
2024-04-29 15:06:54,960:INFO:Set up data.
2024-04-29 15:06:54,979:INFO:Set up index.
2024-04-29 15:08:11,185:INFO:Initializing load_model()
2024-04-29 15:08:11,185:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:08:11,215:INFO:Initializing predict_model()
2024-04-29 15:08:11,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AB0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E26616C0>)
2024-04-29 15:08:11,215:INFO:Checking exceptions
2024-04-29 15:08:11,215:INFO:Preloading libraries
2024-04-29 15:08:11,216:INFO:Set up data.
2024-04-29 15:08:11,222:INFO:Set up index.
2024-04-29 15:08:54,042:INFO:Initializing load_model()
2024-04-29 15:08:54,042:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:08:54,070:INFO:Initializing predict_model()
2024-04-29 15:08:54,070:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0B5D990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E2661F80>)
2024-04-29 15:08:54,070:INFO:Checking exceptions
2024-04-29 15:08:54,070:INFO:Preloading libraries
2024-04-29 15:08:54,070:INFO:Set up data.
2024-04-29 15:08:54,081:INFO:Set up index.
2024-04-29 15:09:16,973:INFO:Initializing load_model()
2024-04-29 15:09:16,973:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:17,003:INFO:Initializing predict_model()
2024-04-29 15:09:17,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E25618D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FF600>)
2024-04-29 15:09:17,003:INFO:Checking exceptions
2024-04-29 15:09:17,003:INFO:Preloading libraries
2024-04-29 15:09:17,003:INFO:Set up data.
2024-04-29 15:09:17,019:INFO:Set up index.
2024-04-29 15:09:21,536:INFO:Initializing load_model()
2024-04-29 15:09:21,536:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:21,565:INFO:Initializing predict_model()
2024-04-29 15:09:21,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E279A950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FC860>)
2024-04-29 15:09:21,565:INFO:Checking exceptions
2024-04-29 15:09:21,565:INFO:Preloading libraries
2024-04-29 15:09:21,566:INFO:Set up data.
2024-04-29 15:09:21,573:INFO:Set up index.
2024-04-29 15:09:24,061:INFO:Initializing load_model()
2024-04-29 15:09:24,061:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:24,089:INFO:Initializing predict_model()
2024-04-29 15:09:24,089:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E2952510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FDE40>)
2024-04-29 15:09:24,089:INFO:Checking exceptions
2024-04-29 15:09:24,089:INFO:Preloading libraries
2024-04-29 15:09:24,089:INFO:Set up data.
2024-04-29 15:09:24,102:INFO:Set up index.
2024-04-29 15:09:26,095:INFO:Initializing load_model()
2024-04-29 15:09:26,095:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:26,125:INFO:Initializing predict_model()
2024-04-29 15:09:26,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262CC64C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FE480>)
2024-04-29 15:09:26,126:INFO:Checking exceptions
2024-04-29 15:09:26,126:INFO:Preloading libraries
2024-04-29 15:09:26,126:INFO:Set up data.
2024-04-29 15:09:26,133:INFO:Set up index.
2024-04-29 15:09:27,768:INFO:Initializing load_model()
2024-04-29 15:09:27,768:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:27,786:INFO:Initializing predict_model()
2024-04-29 15:09:27,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0AC8510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FE8E0>)
2024-04-29 15:09:27,786:INFO:Checking exceptions
2024-04-29 15:09:27,786:INFO:Preloading libraries
2024-04-29 15:09:27,786:INFO:Set up data.
2024-04-29 15:09:27,796:INFO:Set up index.
2024-04-29 15:09:36,448:INFO:Initializing load_model()
2024-04-29 15:09:36,448:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:09:36,470:INFO:Initializing predict_model()
2024-04-29 15:09:36,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262CC64D590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FCB80>)
2024-04-29 15:09:36,470:INFO:Checking exceptions
2024-04-29 15:09:36,470:INFO:Preloading libraries
2024-04-29 15:09:36,471:INFO:Set up data.
2024-04-29 15:09:36,478:INFO:Set up index.
2024-04-29 15:10:02,495:INFO:Initializing load_model()
2024-04-29 15:10:02,495:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:10:02,517:INFO:Initializing predict_model()
2024-04-29 15:10:02,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E2939F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FCB80>)
2024-04-29 15:10:02,518:INFO:Checking exceptions
2024-04-29 15:10:02,518:INFO:Preloading libraries
2024-04-29 15:10:02,518:INFO:Set up data.
2024-04-29 15:10:02,527:INFO:Set up index.
2024-04-29 15:10:03,286:INFO:Initializing load_model()
2024-04-29 15:10:03,286:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-29 15:10:03,307:INFO:Initializing predict_model()
2024-04-29 15:10:03,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000262E0B5EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262E29FFE20>)
2024-04-29 15:10:03,307:INFO:Checking exceptions
2024-04-29 15:10:03,307:INFO:Preloading libraries
2024-04-29 15:10:03,307:INFO:Set up data.
2024-04-29 15:10:03,324:INFO:Set up index.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:11:44,195:INFO:Initializing load_model()
2024-04-30 10:11:44,196:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:11:45,121:INFO:Initializing predict_model()
2024-04-30 10:11:45,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E744A790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9041F80>)
2024-04-30 10:11:45,121:INFO:Checking exceptions
2024-04-30 10:11:45,121:INFO:Preloading libraries
2024-04-30 10:11:45,122:INFO:Set up data.
2024-04-30 10:11:45,123:INFO:Set up index.
2024-04-30 10:21:24,914:INFO:Initializing load_model()
2024-04-30 10:21:24,914:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:28,299:INFO:Initializing load_model()
2024-04-30 10:21:28,300:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:28,318:INFO:Initializing predict_model()
2024-04-30 10:21:28,320:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E938EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9391EE0>)
2024-04-30 10:21:28,320:INFO:Checking exceptions
2024-04-30 10:21:28,320:INFO:Preloading libraries
2024-04-30 10:21:28,320:INFO:Set up data.
2024-04-30 10:21:28,328:INFO:Set up index.
2024-04-30 10:21:29,437:INFO:Initializing load_model()
2024-04-30 10:21:29,437:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:58,317:INFO:Initializing load_model()
2024-04-30 10:21:58,317:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:21:58,345:INFO:Initializing predict_model()
2024-04-30 10:21:58,345:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000261E8FD2150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261E9392840>)
2024-04-30 10:21:58,346:INFO:Checking exceptions
2024-04-30 10:21:58,346:INFO:Preloading libraries
2024-04-30 10:21:58,346:INFO:Set up data.
2024-04-30 10:21:58,354:INFO:Set up index.
2024-04-30 10:22:02,060:INFO:Initializing load_model()
2024-04-30 10:22:02,060:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:22:03,593:INFO:Initializing load_model()
2024-04-30 10:22:03,594:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:53,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 10:23:56,123:INFO:Initializing load_model()
2024-04-30 10:23:56,123:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:00,647:INFO:Initializing load_model()
2024-04-30 10:24:00,647:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:00,670:INFO:Initializing predict_model()
2024-04-30 10:24:00,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:24:00,670:INFO:Checking exceptions
2024-04-30 10:24:00,671:INFO:Preloading libraries
2024-04-30 10:24:00,671:INFO:Set up data.
2024-04-30 10:24:00,681:INFO:Set up index.
2024-04-30 10:24:03,509:INFO:Initializing load_model()
2024-04-30 10:24:03,509:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:03,525:INFO:Initializing predict_model()
2024-04-30 10:24:03,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557FC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962480>)
2024-04-30 10:24:03,525:INFO:Checking exceptions
2024-04-30 10:24:03,525:INFO:Preloading libraries
2024-04-30 10:24:03,525:INFO:Set up data.
2024-04-30 10:24:03,545:INFO:Set up index.
2024-04-30 10:24:06,221:INFO:Initializing load_model()
2024-04-30 10:24:06,221:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:06,235:INFO:Initializing predict_model()
2024-04-30 10:24:06,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85583D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859634C0>)
2024-04-30 10:24:06,235:INFO:Checking exceptions
2024-04-30 10:24:06,235:INFO:Preloading libraries
2024-04-30 10:24:06,235:INFO:Set up data.
2024-04-30 10:24:06,250:INFO:Set up index.
2024-04-30 10:24:06,606:INFO:Initializing load_model()
2024-04-30 10:24:06,606:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:06,639:INFO:Initializing predict_model()
2024-04-30 10:24:06,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858C9F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961080>)
2024-04-30 10:24:06,639:INFO:Checking exceptions
2024-04-30 10:24:06,639:INFO:Preloading libraries
2024-04-30 10:24:06,640:INFO:Set up data.
2024-04-30 10:24:06,646:INFO:Set up index.
2024-04-30 10:24:07,216:INFO:Initializing load_model()
2024-04-30 10:24:07,216:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:24:07,235:INFO:Initializing predict_model()
2024-04-30 10:24:07,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85933C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEC93EAC0>)
2024-04-30 10:24:07,235:INFO:Checking exceptions
2024-04-30 10:24:07,235:INFO:Preloading libraries
2024-04-30 10:24:07,236:INFO:Set up data.
2024-04-30 10:24:07,243:INFO:Set up index.
2024-04-30 10:25:37,814:INFO:Initializing load_model()
2024-04-30 10:25:37,814:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:27:01,631:INFO:Initializing load_model()
2024-04-30 10:27:01,631:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:27:01,651:INFO:Initializing predict_model()
2024-04-30 10:27:01,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85581490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947060>)
2024-04-30 10:27:01,651:INFO:Checking exceptions
2024-04-30 10:27:01,651:INFO:Preloading libraries
2024-04-30 10:27:01,651:INFO:Set up data.
2024-04-30 10:27:01,658:INFO:Set up index.
2024-04-30 10:27:02,141:INFO:Initializing load_model()
2024-04-30 10:27:02,141:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:23,350:INFO:Initializing load_model()
2024-04-30 10:29:23,350:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:26,364:INFO:Initializing load_model()
2024-04-30 10:29:26,364:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:29:26,383:INFO:Initializing predict_model()
2024-04-30 10:29:26,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A01450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA713A0>)
2024-04-30 10:29:26,384:INFO:Checking exceptions
2024-04-30 10:29:26,384:INFO:Preloading libraries
2024-04-30 10:29:26,384:INFO:Set up data.
2024-04-30 10:29:26,392:INFO:Set up index.
2024-04-30 10:29:59,177:INFO:Initializing load_model()
2024-04-30 10:29:59,177:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:30:02,374:INFO:Initializing load_model()
2024-04-30 10:30:02,374:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:30:02,401:INFO:Initializing predict_model()
2024-04-30 10:30:02,402:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3F010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856449A0>)
2024-04-30 10:30:02,402:INFO:Checking exceptions
2024-04-30 10:30:02,402:INFO:Preloading libraries
2024-04-30 10:30:02,402:INFO:Set up data.
2024-04-30 10:30:02,410:INFO:Set up index.
2024-04-30 10:30:02,990:INFO:Initializing load_model()
2024-04-30 10:30:02,990:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:13,486:INFO:Initializing load_model()
2024-04-30 10:31:13,486:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:13,526:INFO:Initializing predict_model()
2024-04-30 10:31:13,526:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960680>)
2024-04-30 10:31:13,526:INFO:Checking exceptions
2024-04-30 10:31:13,526:INFO:Preloading libraries
2024-04-30 10:31:13,526:INFO:Set up data.
2024-04-30 10:31:13,531:INFO:Set up index.
2024-04-30 10:31:22,754:INFO:Initializing load_model()
2024-04-30 10:31:22,754:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:22,779:INFO:Initializing predict_model()
2024-04-30 10:31:22,779:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A65FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946700>)
2024-04-30 10:31:22,781:INFO:Checking exceptions
2024-04-30 10:31:22,781:INFO:Preloading libraries
2024-04-30 10:31:22,781:INFO:Set up data.
2024-04-30 10:31:22,788:INFO:Set up index.
2024-04-30 10:31:28,380:INFO:Initializing load_model()
2024-04-30 10:31:28,380:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:31:28,406:INFO:Initializing predict_model()
2024-04-30 10:31:28,406:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A383D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70EA0>)
2024-04-30 10:31:28,406:INFO:Checking exceptions
2024-04-30 10:31:28,406:INFO:Preloading libraries
2024-04-30 10:31:28,407:INFO:Set up data.
2024-04-30 10:31:28,416:INFO:Set up index.
2024-04-30 10:32:57,480:INFO:Initializing load_model()
2024-04-30 10:32:57,480:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:32:57,503:INFO:Initializing predict_model()
2024-04-30 10:32:57,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85986350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11A8E0>)
2024-04-30 10:32:57,503:INFO:Checking exceptions
2024-04-30 10:32:57,503:INFO:Preloading libraries
2024-04-30 10:32:57,503:INFO:Set up data.
2024-04-30 10:32:57,510:INFO:Set up index.
2024-04-30 10:33:14,336:INFO:Initializing load_model()
2024-04-30 10:33:14,336:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:33:14,360:INFO:Initializing predict_model()
2024-04-30 10:33:14,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85589F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859604A0>)
2024-04-30 10:33:14,360:INFO:Checking exceptions
2024-04-30 10:33:14,360:INFO:Preloading libraries
2024-04-30 10:33:14,360:INFO:Set up data.
2024-04-30 10:33:14,375:INFO:Set up index.
2024-04-30 10:34:01,978:INFO:Initializing load_model()
2024-04-30 10:34:01,978:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:01,996:INFO:Initializing predict_model()
2024-04-30 10:34:01,996:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85977190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856447C0>)
2024-04-30 10:34:01,996:INFO:Checking exceptions
2024-04-30 10:34:01,996:INFO:Preloading libraries
2024-04-30 10:34:01,996:INFO:Set up data.
2024-04-30 10:34:02,013:INFO:Set up index.
2024-04-30 10:34:29,977:INFO:Initializing load_model()
2024-04-30 10:34:29,977:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:30,004:INFO:Initializing predict_model()
2024-04-30 10:34:30,005:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85586D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856445E0>)
2024-04-30 10:34:30,005:INFO:Checking exceptions
2024-04-30 10:34:30,005:INFO:Preloading libraries
2024-04-30 10:34:30,005:INFO:Set up data.
2024-04-30 10:34:30,011:INFO:Set up index.
2024-04-30 10:34:46,974:INFO:Initializing load_model()
2024-04-30 10:34:46,974:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:34:47,006:INFO:Initializing predict_model()
2024-04-30 10:34:47,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF4043D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960C20>)
2024-04-30 10:34:47,006:INFO:Checking exceptions
2024-04-30 10:34:47,006:INFO:Preloading libraries
2024-04-30 10:34:47,006:INFO:Set up data.
2024-04-30 10:34:47,016:INFO:Set up index.
2024-04-30 10:36:00,755:INFO:Initializing load_model()
2024-04-30 10:36:00,756:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:36:00,777:INFO:Initializing predict_model()
2024-04-30 10:36:00,777:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A64250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961EE0>)
2024-04-30 10:36:00,778:INFO:Checking exceptions
2024-04-30 10:36:00,778:INFO:Preloading libraries
2024-04-30 10:36:00,778:INFO:Set up data.
2024-04-30 10:36:00,785:INFO:Set up index.
2024-04-30 10:36:13,846:INFO:Initializing load_model()
2024-04-30 10:36:13,846:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:36:13,870:INFO:Initializing predict_model()
2024-04-30 10:36:13,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D1BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960400>)
2024-04-30 10:36:13,870:INFO:Checking exceptions
2024-04-30 10:36:13,870:INFO:Preloading libraries
2024-04-30 10:36:13,870:INFO:Set up data.
2024-04-30 10:36:13,883:INFO:Set up index.
2024-04-30 10:37:10,500:INFO:Initializing load_model()
2024-04-30 10:37:10,500:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:10,528:INFO:Initializing predict_model()
2024-04-30 10:37:10,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:37:10,529:INFO:Checking exceptions
2024-04-30 10:37:10,529:INFO:Preloading libraries
2024-04-30 10:37:10,529:INFO:Set up data.
2024-04-30 10:37:10,535:INFO:Set up index.
2024-04-30 10:37:12,280:INFO:Initializing load_model()
2024-04-30 10:37:12,280:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:12,294:INFO:Initializing predict_model()
2024-04-30 10:37:12,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF405490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A858A3C40>)
2024-04-30 10:37:12,294:INFO:Checking exceptions
2024-04-30 10:37:12,294:INFO:Preloading libraries
2024-04-30 10:37:12,294:INFO:Set up data.
2024-04-30 10:37:12,304:INFO:Set up index.
2024-04-30 10:37:13,942:INFO:Initializing load_model()
2024-04-30 10:37:13,942:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:13,959:INFO:Initializing predict_model()
2024-04-30 10:37:13,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 10:37:13,959:INFO:Checking exceptions
2024-04-30 10:37:13,959:INFO:Preloading libraries
2024-04-30 10:37:13,959:INFO:Set up data.
2024-04-30 10:37:13,977:INFO:Set up index.
2024-04-30 10:37:15,612:INFO:Initializing load_model()
2024-04-30 10:37:15,612:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:15,652:INFO:Initializing predict_model()
2024-04-30 10:37:15,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946980>)
2024-04-30 10:37:15,652:INFO:Checking exceptions
2024-04-30 10:37:15,652:INFO:Preloading libraries
2024-04-30 10:37:15,652:INFO:Set up data.
2024-04-30 10:37:15,656:INFO:Set up index.
2024-04-30 10:37:17,299:INFO:Initializing load_model()
2024-04-30 10:37:17,299:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:17,315:INFO:Initializing predict_model()
2024-04-30 10:37:17,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85932710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963100>)
2024-04-30 10:37:17,315:INFO:Checking exceptions
2024-04-30 10:37:17,315:INFO:Preloading libraries
2024-04-30 10:37:17,315:INFO:Set up data.
2024-04-30 10:37:17,328:INFO:Set up index.
2024-04-30 10:37:18,787:INFO:Initializing load_model()
2024-04-30 10:37:18,787:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:18,804:INFO:Initializing predict_model()
2024-04-30 10:37:18,804:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85650E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947100>)
2024-04-30 10:37:18,804:INFO:Checking exceptions
2024-04-30 10:37:18,804:INFO:Preloading libraries
2024-04-30 10:37:18,804:INFO:Set up data.
2024-04-30 10:37:18,820:INFO:Set up index.
2024-04-30 10:37:20,909:INFO:Initializing load_model()
2024-04-30 10:37:20,909:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:20,938:INFO:Initializing predict_model()
2024-04-30 10:37:20,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83997E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:37:20,938:INFO:Checking exceptions
2024-04-30 10:37:20,939:INFO:Preloading libraries
2024-04-30 10:37:20,939:INFO:Set up data.
2024-04-30 10:37:20,945:INFO:Set up index.
2024-04-30 10:37:23,216:INFO:Initializing load_model()
2024-04-30 10:37:23,216:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:23,237:INFO:Initializing predict_model()
2024-04-30 10:37:23,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85975B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 10:37:23,237:INFO:Checking exceptions
2024-04-30 10:37:23,237:INFO:Preloading libraries
2024-04-30 10:37:23,237:INFO:Set up data.
2024-04-30 10:37:23,244:INFO:Set up index.
2024-04-30 10:37:25,202:INFO:Initializing load_model()
2024-04-30 10:37:25,202:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:37:25,218:INFO:Initializing predict_model()
2024-04-30 10:37:25,218:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85588A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85266A20>)
2024-04-30 10:37:25,218:INFO:Checking exceptions
2024-04-30 10:37:25,224:INFO:Preloading libraries
2024-04-30 10:37:25,224:INFO:Set up data.
2024-04-30 10:37:25,231:INFO:Set up index.
2024-04-30 10:38:06,803:INFO:Initializing load_model()
2024-04-30 10:38:06,803:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:06,830:INFO:Initializing predict_model()
2024-04-30 10:38:06,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A00F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70860>)
2024-04-30 10:38:06,831:INFO:Checking exceptions
2024-04-30 10:38:06,831:INFO:Preloading libraries
2024-04-30 10:38:06,831:INFO:Set up data.
2024-04-30 10:38:06,839:INFO:Set up index.
2024-04-30 10:38:12,765:INFO:Initializing load_model()
2024-04-30 10:38:12,765:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:12,787:INFO:Initializing predict_model()
2024-04-30 10:38:12,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDCDA980>)
2024-04-30 10:38:12,787:INFO:Checking exceptions
2024-04-30 10:38:12,787:INFO:Preloading libraries
2024-04-30 10:38:12,787:INFO:Set up data.
2024-04-30 10:38:12,795:INFO:Set up index.
2024-04-30 10:38:15,580:INFO:Initializing load_model()
2024-04-30 10:38:15,580:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:15,596:INFO:Initializing predict_model()
2024-04-30 10:38:15,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85896C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 10:38:15,596:INFO:Checking exceptions
2024-04-30 10:38:15,596:INFO:Preloading libraries
2024-04-30 10:38:15,596:INFO:Set up data.
2024-04-30 10:38:15,610:INFO:Set up index.
2024-04-30 10:38:17,385:INFO:Initializing load_model()
2024-04-30 10:38:17,385:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:17,406:INFO:Initializing predict_model()
2024-04-30 10:38:17,407:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF404E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644180>)
2024-04-30 10:38:17,407:INFO:Checking exceptions
2024-04-30 10:38:17,407:INFO:Preloading libraries
2024-04-30 10:38:17,407:INFO:Set up data.
2024-04-30 10:38:17,413:INFO:Set up index.
2024-04-30 10:38:18,032:INFO:Initializing load_model()
2024-04-30 10:38:18,032:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:18,052:INFO:Initializing predict_model()
2024-04-30 10:38:18,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D0750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE1EB600>)
2024-04-30 10:38:18,052:INFO:Checking exceptions
2024-04-30 10:38:18,052:INFO:Preloading libraries
2024-04-30 10:38:18,053:INFO:Set up data.
2024-04-30 10:38:18,061:INFO:Set up index.
2024-04-30 10:38:19,074:INFO:Initializing load_model()
2024-04-30 10:38:19,074:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:19,110:INFO:Initializing predict_model()
2024-04-30 10:38:19,111:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A3B590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945D00>)
2024-04-30 10:38:19,111:INFO:Checking exceptions
2024-04-30 10:38:19,111:INFO:Preloading libraries
2024-04-30 10:38:19,111:INFO:Set up data.
2024-04-30 10:38:19,112:INFO:Set up index.
2024-04-30 10:38:21,694:INFO:Initializing load_model()
2024-04-30 10:38:21,694:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:38:21,709:INFO:Initializing predict_model()
2024-04-30 10:38:21,717:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85966CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947CE0>)
2024-04-30 10:38:21,717:INFO:Checking exceptions
2024-04-30 10:38:21,717:INFO:Preloading libraries
2024-04-30 10:38:21,717:INFO:Set up data.
2024-04-30 10:38:21,723:INFO:Set up index.
2024-04-30 10:41:20,884:INFO:Initializing load_model()
2024-04-30 10:41:20,884:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:41:20,914:INFO:Initializing predict_model()
2024-04-30 10:41:20,915:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A02D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859607C0>)
2024-04-30 10:41:20,915:INFO:Checking exceptions
2024-04-30 10:41:20,915:INFO:Preloading libraries
2024-04-30 10:41:20,915:INFO:Set up data.
2024-04-30 10:41:20,920:INFO:Set up index.
2024-04-30 10:42:34,149:INFO:Initializing load_model()
2024-04-30 10:42:34,149:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:34,168:INFO:Initializing predict_model()
2024-04-30 10:42:34,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 10:42:34,168:INFO:Checking exceptions
2024-04-30 10:42:34,168:INFO:Preloading libraries
2024-04-30 10:42:34,168:INFO:Set up data.
2024-04-30 10:42:34,182:INFO:Set up index.
2024-04-30 10:42:44,007:INFO:Initializing load_model()
2024-04-30 10:42:44,007:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:44,038:INFO:Initializing predict_model()
2024-04-30 10:42:44,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AC00>)
2024-04-30 10:42:44,039:INFO:Checking exceptions
2024-04-30 10:42:44,039:INFO:Preloading libraries
2024-04-30 10:42:44,039:INFO:Set up data.
2024-04-30 10:42:44,045:INFO:Set up index.
2024-04-30 10:42:47,223:INFO:Initializing load_model()
2024-04-30 10:42:47,223:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:47,243:INFO:Initializing predict_model()
2024-04-30 10:42:47,243:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11B9C0>)
2024-04-30 10:42:47,243:INFO:Checking exceptions
2024-04-30 10:42:47,244:INFO:Preloading libraries
2024-04-30 10:42:47,244:INFO:Set up data.
2024-04-30 10:42:47,250:INFO:Set up index.
2024-04-30 10:42:49,756:INFO:Initializing load_model()
2024-04-30 10:42:49,756:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:49,779:INFO:Initializing predict_model()
2024-04-30 10:42:49,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA713A0>)
2024-04-30 10:42:49,780:INFO:Checking exceptions
2024-04-30 10:42:49,780:INFO:Preloading libraries
2024-04-30 10:42:49,780:INFO:Set up data.
2024-04-30 10:42:49,786:INFO:Set up index.
2024-04-30 10:42:52,058:INFO:Initializing load_model()
2024-04-30 10:42:52,058:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:52,076:INFO:Initializing predict_model()
2024-04-30 10:42:52,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85961620>)
2024-04-30 10:42:52,077:INFO:Checking exceptions
2024-04-30 10:42:52,077:INFO:Preloading libraries
2024-04-30 10:42:52,077:INFO:Set up data.
2024-04-30 10:42:52,084:INFO:Set up index.
2024-04-30 10:42:55,734:INFO:Initializing load_model()
2024-04-30 10:42:55,734:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:55,765:INFO:Initializing predict_model()
2024-04-30 10:42:55,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858D2F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE118C20>)
2024-04-30 10:42:55,765:INFO:Checking exceptions
2024-04-30 10:42:55,765:INFO:Preloading libraries
2024-04-30 10:42:55,765:INFO:Set up data.
2024-04-30 10:42:55,772:INFO:Set up index.
2024-04-30 10:42:56,570:INFO:Initializing load_model()
2024-04-30 10:42:56,570:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:42:56,605:INFO:Initializing predict_model()
2024-04-30 10:42:56,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85591F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644E00>)
2024-04-30 10:42:56,606:INFO:Checking exceptions
2024-04-30 10:42:56,606:INFO:Preloading libraries
2024-04-30 10:42:56,606:INFO:Set up data.
2024-04-30 10:42:56,613:INFO:Set up index.
2024-04-30 10:43:00,391:INFO:Initializing load_model()
2024-04-30 10:43:00,391:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:00,409:INFO:Initializing predict_model()
2024-04-30 10:43:00,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8595BD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960540>)
2024-04-30 10:43:00,410:INFO:Checking exceptions
2024-04-30 10:43:00,410:INFO:Preloading libraries
2024-04-30 10:43:00,410:INFO:Set up data.
2024-04-30 10:43:00,417:INFO:Set up index.
2024-04-30 10:43:04,896:INFO:Initializing load_model()
2024-04-30 10:43:04,896:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:04,914:INFO:Initializing predict_model()
2024-04-30 10:43:04,914:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE1467D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:43:04,914:INFO:Checking exceptions
2024-04-30 10:43:04,914:INFO:Preloading libraries
2024-04-30 10:43:04,914:INFO:Set up data.
2024-04-30 10:43:04,919:INFO:Set up index.
2024-04-30 10:43:19,051:INFO:Initializing load_model()
2024-04-30 10:43:19,051:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:19,079:INFO:Initializing predict_model()
2024-04-30 10:43:19,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596F9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859474C0>)
2024-04-30 10:43:19,079:INFO:Checking exceptions
2024-04-30 10:43:19,079:INFO:Preloading libraries
2024-04-30 10:43:19,080:INFO:Set up data.
2024-04-30 10:43:19,090:INFO:Set up index.
2024-04-30 10:43:24,442:INFO:Initializing load_model()
2024-04-30 10:43:24,443:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:24,459:INFO:Initializing predict_model()
2024-04-30 10:43:24,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85591C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947100>)
2024-04-30 10:43:24,460:INFO:Checking exceptions
2024-04-30 10:43:24,460:INFO:Preloading libraries
2024-04-30 10:43:24,460:INFO:Set up data.
2024-04-30 10:43:24,467:INFO:Set up index.
2024-04-30 10:43:27,863:INFO:Initializing load_model()
2024-04-30 10:43:27,863:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:27,881:INFO:Initializing predict_model()
2024-04-30 10:43:27,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8582B350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947560>)
2024-04-30 10:43:27,883:INFO:Checking exceptions
2024-04-30 10:43:27,883:INFO:Preloading libraries
2024-04-30 10:43:27,883:INFO:Set up data.
2024-04-30 10:43:27,890:INFO:Set up index.
2024-04-30 10:43:35,958:INFO:Initializing load_model()
2024-04-30 10:43:35,958:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:35,975:INFO:Initializing predict_model()
2024-04-30 10:43:35,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A594D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A852B82C0>)
2024-04-30 10:43:35,976:INFO:Checking exceptions
2024-04-30 10:43:35,976:INFO:Preloading libraries
2024-04-30 10:43:35,976:INFO:Set up data.
2024-04-30 10:43:35,983:INFO:Set up index.
2024-04-30 10:43:37,369:INFO:Initializing load_model()
2024-04-30 10:43:37,369:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:37,388:INFO:Initializing predict_model()
2024-04-30 10:43:37,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558B6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644A40>)
2024-04-30 10:43:37,388:INFO:Checking exceptions
2024-04-30 10:43:37,388:INFO:Preloading libraries
2024-04-30 10:43:37,389:INFO:Set up data.
2024-04-30 10:43:37,394:INFO:Set up index.
2024-04-30 10:43:40,804:INFO:Initializing load_model()
2024-04-30 10:43:40,804:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:40,828:INFO:Initializing predict_model()
2024-04-30 10:43:40,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644E00>)
2024-04-30 10:43:40,828:INFO:Checking exceptions
2024-04-30 10:43:40,828:INFO:Preloading libraries
2024-04-30 10:43:40,828:INFO:Set up data.
2024-04-30 10:43:40,835:INFO:Set up index.
2024-04-30 10:43:44,781:INFO:Initializing load_model()
2024-04-30 10:43:44,781:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:44,808:INFO:Initializing predict_model()
2024-04-30 10:43:44,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858C8FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644720>)
2024-04-30 10:43:44,808:INFO:Checking exceptions
2024-04-30 10:43:44,808:INFO:Preloading libraries
2024-04-30 10:43:44,808:INFO:Set up data.
2024-04-30 10:43:44,816:INFO:Set up index.
2024-04-30 10:43:47,035:INFO:Initializing load_model()
2024-04-30 10:43:47,035:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:47,054:INFO:Initializing predict_model()
2024-04-30 10:43:47,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558BCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644B80>)
2024-04-30 10:43:47,054:INFO:Checking exceptions
2024-04-30 10:43:47,054:INFO:Preloading libraries
2024-04-30 10:43:47,054:INFO:Set up data.
2024-04-30 10:43:47,061:INFO:Set up index.
2024-04-30 10:43:48,024:INFO:Initializing load_model()
2024-04-30 10:43:48,024:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:48,042:INFO:Initializing predict_model()
2024-04-30 10:43:48,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 10:43:48,042:INFO:Checking exceptions
2024-04-30 10:43:48,042:INFO:Preloading libraries
2024-04-30 10:43:48,043:INFO:Set up data.
2024-04-30 10:43:48,049:INFO:Set up index.
2024-04-30 10:43:49,333:INFO:Initializing load_model()
2024-04-30 10:43:49,333:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:49,352:INFO:Initializing predict_model()
2024-04-30 10:43:49,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A856447C0>)
2024-04-30 10:43:49,352:INFO:Checking exceptions
2024-04-30 10:43:49,352:INFO:Preloading libraries
2024-04-30 10:43:49,353:INFO:Set up data.
2024-04-30 10:43:49,358:INFO:Set up index.
2024-04-30 10:43:53,000:INFO:Initializing load_model()
2024-04-30 10:43:53,000:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:43:53,018:INFO:Initializing predict_model()
2024-04-30 10:43:53,019:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE1474D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85645080>)
2024-04-30 10:43:53,019:INFO:Checking exceptions
2024-04-30 10:43:53,019:INFO:Preloading libraries
2024-04-30 10:43:53,019:INFO:Set up data.
2024-04-30 10:43:53,025:INFO:Set up index.
2024-04-30 10:49:02,777:INFO:Initializing load_model()
2024-04-30 10:49:02,777:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:02,798:INFO:Initializing predict_model()
2024-04-30 10:49:02,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A855864D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC5760>)
2024-04-30 10:49:02,798:INFO:Checking exceptions
2024-04-30 10:49:02,798:INFO:Preloading libraries
2024-04-30 10:49:02,798:INFO:Set up data.
2024-04-30 10:49:02,799:INFO:Set up index.
2024-04-30 10:49:16,675:INFO:Initializing load_model()
2024-04-30 10:49:16,675:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:16,699:INFO:Initializing predict_model()
2024-04-30 10:49:16,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555FBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AB60>)
2024-04-30 10:49:16,699:INFO:Checking exceptions
2024-04-30 10:49:16,700:INFO:Preloading libraries
2024-04-30 10:49:16,700:INFO:Set up data.
2024-04-30 10:49:16,708:INFO:Set up index.
2024-04-30 10:49:17,271:INFO:Initializing load_model()
2024-04-30 10:49:17,271:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:17,301:INFO:Initializing predict_model()
2024-04-30 10:49:17,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8596E710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE118C20>)
2024-04-30 10:49:17,301:INFO:Checking exceptions
2024-04-30 10:49:17,301:INFO:Preloading libraries
2024-04-30 10:49:17,303:INFO:Set up data.
2024-04-30 10:49:17,309:INFO:Set up index.
2024-04-30 10:49:20,301:INFO:Initializing load_model()
2024-04-30 10:49:20,301:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:49:20,330:INFO:Initializing predict_model()
2024-04-30 10:49:20,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AECEA6110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 10:49:20,332:INFO:Checking exceptions
2024-04-30 10:49:20,333:INFO:Preloading libraries
2024-04-30 10:49:20,333:INFO:Set up data.
2024-04-30 10:49:20,345:INFO:Set up index.
2024-04-30 10:50:32,500:INFO:Initializing load_model()
2024-04-30 10:50:32,500:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:50:32,521:INFO:Initializing predict_model()
2024-04-30 10:50:32,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEE137C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB578EA0>)
2024-04-30 10:50:32,521:INFO:Checking exceptions
2024-04-30 10:50:32,521:INFO:Preloading libraries
2024-04-30 10:50:32,521:INFO:Set up data.
2024-04-30 10:50:32,535:INFO:Set up index.
2024-04-30 10:51:29,653:INFO:Initializing load_model()
2024-04-30 10:51:29,654:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 10:51:29,677:INFO:Initializing predict_model()
2024-04-30 10:51:29,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A839E76A0>)
2024-04-30 10:51:29,682:INFO:Checking exceptions
2024-04-30 10:51:29,682:INFO:Preloading libraries
2024-04-30 10:51:29,683:INFO:Set up data.
2024-04-30 10:51:29,693:INFO:Set up index.
2024-04-30 11:02:07,041:INFO:Initializing load_model()
2024-04-30 11:02:07,041:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:02:07,079:INFO:Initializing predict_model()
2024-04-30 11:02:07,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858CB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA700E0>)
2024-04-30 11:02:07,081:INFO:Checking exceptions
2024-04-30 11:02:07,081:INFO:Preloading libraries
2024-04-30 11:02:07,082:INFO:Set up data.
2024-04-30 11:02:07,089:INFO:Set up index.
2024-04-30 11:05:44,813:INFO:Initializing load_model()
2024-04-30 11:05:44,813:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:05:44,831:INFO:Initializing predict_model()
2024-04-30 11:05:44,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85967990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11BEC0>)
2024-04-30 11:05:44,831:INFO:Checking exceptions
2024-04-30 11:05:44,831:INFO:Preloading libraries
2024-04-30 11:05:44,832:INFO:Set up data.
2024-04-30 11:05:44,838:INFO:Set up index.
2024-04-30 11:11:11,051:INFO:Initializing load_model()
2024-04-30 11:11:11,051:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:11:11,092:INFO:Initializing predict_model()
2024-04-30 11:11:11,093:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557DBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71DA0>)
2024-04-30 11:11:11,093:INFO:Checking exceptions
2024-04-30 11:11:11,093:INFO:Preloading libraries
2024-04-30 11:11:11,093:INFO:Set up data.
2024-04-30 11:11:11,101:INFO:Set up index.
2024-04-30 11:11:54,267:INFO:Initializing load_model()
2024-04-30 11:11:54,280:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:11:54,301:INFO:Initializing predict_model()
2024-04-30 11:11:54,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85959E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962480>)
2024-04-30 11:11:54,301:INFO:Checking exceptions
2024-04-30 11:11:54,301:INFO:Preloading libraries
2024-04-30 11:11:54,302:INFO:Set up data.
2024-04-30 11:11:54,308:INFO:Set up index.
2024-04-30 11:13:05,833:INFO:Initializing load_model()
2024-04-30 11:13:05,833:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:13:05,855:INFO:Initializing predict_model()
2024-04-30 11:13:05,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85583D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70AE0>)
2024-04-30 11:13:05,856:INFO:Checking exceptions
2024-04-30 11:13:05,856:INFO:Preloading libraries
2024-04-30 11:13:05,856:INFO:Set up data.
2024-04-30 11:13:05,870:INFO:Set up index.
2024-04-30 11:24:31,231:INFO:Initializing load_model()
2024-04-30 11:24:31,231:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:24:31,251:INFO:Initializing predict_model()
2024-04-30 11:24:31,252:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85651490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945440>)
2024-04-30 11:24:31,252:INFO:Checking exceptions
2024-04-30 11:24:31,252:INFO:Preloading libraries
2024-04-30 11:24:31,252:INFO:Set up data.
2024-04-30 11:24:31,260:INFO:Set up index.
2024-04-30 11:30:53,209:INFO:Initializing load_model()
2024-04-30 11:30:53,209:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:30:53,234:INFO:Initializing predict_model()
2024-04-30 11:30:53,234:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A674D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859613A0>)
2024-04-30 11:30:53,234:INFO:Checking exceptions
2024-04-30 11:30:53,234:INFO:Preloading libraries
2024-04-30 11:30:53,234:INFO:Set up data.
2024-04-30 11:30:53,240:INFO:Set up index.
2024-04-30 11:32:28,929:INFO:Initializing load_model()
2024-04-30 11:32:28,929:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:32:28,948:INFO:Initializing predict_model()
2024-04-30 11:32:28,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A67890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71DA0>)
2024-04-30 11:32:28,948:INFO:Checking exceptions
2024-04-30 11:32:28,951:INFO:Preloading libraries
2024-04-30 11:32:28,952:INFO:Set up data.
2024-04-30 11:32:28,959:INFO:Set up index.
2024-04-30 11:32:34,365:INFO:Initializing load_model()
2024-04-30 11:32:34,365:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:32:34,400:INFO:Initializing predict_model()
2024-04-30 11:32:34,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8558EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70D60>)
2024-04-30 11:32:34,400:INFO:Checking exceptions
2024-04-30 11:32:34,401:INFO:Preloading libraries
2024-04-30 11:32:34,401:INFO:Set up data.
2024-04-30 11:32:34,406:INFO:Set up index.
2024-04-30 11:33:36,797:INFO:Initializing load_model()
2024-04-30 11:33:36,797:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:33:36,825:INFO:Initializing predict_model()
2024-04-30 11:33:36,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A5F650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532CB80>)
2024-04-30 11:33:36,826:INFO:Checking exceptions
2024-04-30 11:33:36,827:INFO:Preloading libraries
2024-04-30 11:33:36,827:INFO:Set up data.
2024-04-30 11:33:36,838:INFO:Set up index.
2024-04-30 11:34:21,881:INFO:Initializing load_model()
2024-04-30 11:34:21,881:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:34:21,897:INFO:Initializing predict_model()
2024-04-30 11:34:21,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A56850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA714E0>)
2024-04-30 11:34:21,897:INFO:Checking exceptions
2024-04-30 11:34:21,897:INFO:Preloading libraries
2024-04-30 11:34:21,897:INFO:Set up data.
2024-04-30 11:34:21,914:INFO:Set up index.
2024-04-30 11:36:54,804:INFO:Initializing load_model()
2024-04-30 11:36:54,804:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:36:54,836:INFO:Initializing predict_model()
2024-04-30 11:36:54,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85592650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859632E0>)
2024-04-30 11:36:54,837:INFO:Checking exceptions
2024-04-30 11:36:54,837:INFO:Preloading libraries
2024-04-30 11:36:54,837:INFO:Set up data.
2024-04-30 11:36:54,845:INFO:Set up index.
2024-04-30 11:37:22,161:INFO:Initializing load_model()
2024-04-30 11:37:22,161:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:37:22,183:INFO:Initializing predict_model()
2024-04-30 11:37:22,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A65E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A839E4CC0>)
2024-04-30 11:37:22,184:INFO:Checking exceptions
2024-04-30 11:37:22,184:INFO:Preloading libraries
2024-04-30 11:37:22,184:INFO:Set up data.
2024-04-30 11:37:22,189:INFO:Set up index.
2024-04-30 11:37:31,032:INFO:Initializing load_model()
2024-04-30 11:37:31,032:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:37:31,052:INFO:Initializing predict_model()
2024-04-30 11:37:31,053:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 11:37:31,053:INFO:Checking exceptions
2024-04-30 11:37:31,053:INFO:Preloading libraries
2024-04-30 11:37:31,053:INFO:Set up data.
2024-04-30 11:37:31,065:INFO:Set up index.
2024-04-30 11:39:39,805:INFO:Initializing load_model()
2024-04-30 11:39:39,805:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:39:39,853:INFO:Initializing predict_model()
2024-04-30 11:39:39,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF3DB0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE075080>)
2024-04-30 11:39:39,853:INFO:Checking exceptions
2024-04-30 11:39:39,853:INFO:Preloading libraries
2024-04-30 11:39:39,853:INFO:Set up data.
2024-04-30 11:39:39,860:INFO:Set up index.
2024-04-30 11:43:33,701:INFO:Initializing load_model()
2024-04-30 11:43:33,701:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:43:33,729:INFO:Initializing predict_model()
2024-04-30 11:43:33,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 11:43:33,730:INFO:Checking exceptions
2024-04-30 11:43:33,730:INFO:Preloading libraries
2024-04-30 11:43:33,730:INFO:Set up data.
2024-04-30 11:43:33,736:INFO:Set up index.
2024-04-30 11:57:52,840:INFO:Initializing load_model()
2024-04-30 11:57:52,840:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:57:52,875:INFO:Initializing predict_model()
2024-04-30 11:57:52,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85967B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644220>)
2024-04-30 11:57:52,875:INFO:Checking exceptions
2024-04-30 11:57:52,875:INFO:Preloading libraries
2024-04-30 11:57:52,875:INFO:Set up data.
2024-04-30 11:57:52,875:INFO:Set up index.
2024-04-30 11:58:20,532:INFO:Initializing load_model()
2024-04-30 11:58:20,532:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:58:20,566:INFO:Initializing predict_model()
2024-04-30 11:58:20,566:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C5E0>)
2024-04-30 11:58:20,566:INFO:Checking exceptions
2024-04-30 11:58:20,566:INFO:Preloading libraries
2024-04-30 11:58:20,566:INFO:Set up data.
2024-04-30 11:58:20,574:INFO:Set up index.
2024-04-30 11:58:34,811:INFO:Initializing load_model()
2024-04-30 11:58:34,811:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:58:34,827:INFO:Initializing predict_model()
2024-04-30 11:58:34,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A5F1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960D60>)
2024-04-30 11:58:34,827:INFO:Checking exceptions
2024-04-30 11:58:34,827:INFO:Preloading libraries
2024-04-30 11:58:34,827:INFO:Set up data.
2024-04-30 11:58:34,827:INFO:Set up index.
2024-04-30 11:59:30,291:INFO:Initializing load_model()
2024-04-30 11:59:30,291:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:30,310:INFO:Initializing predict_model()
2024-04-30 11:59:30,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644900>)
2024-04-30 11:59:30,310:INFO:Checking exceptions
2024-04-30 11:59:30,310:INFO:Preloading libraries
2024-04-30 11:59:30,310:INFO:Set up data.
2024-04-30 11:59:30,317:INFO:Set up index.
2024-04-30 11:59:31,527:INFO:Initializing load_model()
2024-04-30 11:59:31,527:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:31,547:INFO:Initializing predict_model()
2024-04-30 11:59:31,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA6EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70C20>)
2024-04-30 11:59:31,547:INFO:Checking exceptions
2024-04-30 11:59:31,547:INFO:Preloading libraries
2024-04-30 11:59:31,547:INFO:Set up data.
2024-04-30 11:59:31,555:INFO:Set up index.
2024-04-30 11:59:34,751:INFO:Initializing load_model()
2024-04-30 11:59:34,751:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:34,769:INFO:Initializing predict_model()
2024-04-30 11:59:34,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A55710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB925620>)
2024-04-30 11:59:34,769:INFO:Checking exceptions
2024-04-30 11:59:34,769:INFO:Preloading libraries
2024-04-30 11:59:34,769:INFO:Set up data.
2024-04-30 11:59:34,776:INFO:Set up index.
2024-04-30 11:59:38,676:INFO:Initializing load_model()
2024-04-30 11:59:38,676:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 11:59:38,696:INFO:Initializing predict_model()
2024-04-30 11:59:38,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF3D8AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70860>)
2024-04-30 11:59:38,696:INFO:Checking exceptions
2024-04-30 11:59:38,696:INFO:Preloading libraries
2024-04-30 11:59:38,696:INFO:Set up data.
2024-04-30 11:59:38,702:INFO:Set up index.
2024-04-30 12:01:35,107:INFO:Initializing load_model()
2024-04-30 12:01:35,107:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:01:35,134:INFO:Initializing predict_model()
2024-04-30 12:01:35,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85987E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 12:01:35,134:INFO:Checking exceptions
2024-04-30 12:01:35,135:INFO:Preloading libraries
2024-04-30 12:01:35,135:INFO:Set up data.
2024-04-30 12:01:35,136:INFO:Set up index.
2024-04-30 12:02:03,987:INFO:Initializing load_model()
2024-04-30 12:02:03,987:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:02:04,009:INFO:Initializing predict_model()
2024-04-30 12:02:04,010:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2D5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEF4396C0>)
2024-04-30 12:02:04,010:INFO:Checking exceptions
2024-04-30 12:02:04,010:INFO:Preloading libraries
2024-04-30 12:02:04,010:INFO:Set up data.
2024-04-30 12:02:04,014:INFO:Set up index.
2024-04-30 12:04:39,905:INFO:Initializing load_model()
2024-04-30 12:04:39,905:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:04:39,922:INFO:Initializing predict_model()
2024-04-30 12:04:39,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2F750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960EA0>)
2024-04-30 12:04:39,922:INFO:Checking exceptions
2024-04-30 12:04:39,922:INFO:Preloading libraries
2024-04-30 12:04:39,922:INFO:Set up data.
2024-04-30 12:04:39,936:INFO:Set up index.
2024-04-30 12:06:00,099:INFO:Initializing load_model()
2024-04-30 12:06:00,099:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:06:00,124:INFO:Initializing predict_model()
2024-04-30 12:06:00,124:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF404810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85645440>)
2024-04-30 12:06:00,124:INFO:Checking exceptions
2024-04-30 12:06:00,124:INFO:Preloading libraries
2024-04-30 12:06:00,125:INFO:Set up data.
2024-04-30 12:06:00,135:INFO:Set up index.
2024-04-30 12:06:22,417:INFO:Initializing load_model()
2024-04-30 12:06:22,417:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:06:22,440:INFO:Initializing predict_model()
2024-04-30 12:06:22,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A859650D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C900>)
2024-04-30 12:06:22,441:INFO:Checking exceptions
2024-04-30 12:06:22,441:INFO:Preloading libraries
2024-04-30 12:06:22,441:INFO:Set up data.
2024-04-30 12:06:22,447:INFO:Set up index.
2024-04-30 12:07:03,333:INFO:Initializing load_model()
2024-04-30 12:07:03,334:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:03,352:INFO:Initializing predict_model()
2024-04-30 12:07:03,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555E110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB925620>)
2024-04-30 12:07:03,352:INFO:Checking exceptions
2024-04-30 12:07:03,352:INFO:Preloading libraries
2024-04-30 12:07:03,352:INFO:Set up data.
2024-04-30 12:07:03,361:INFO:Set up index.
2024-04-30 12:07:15,633:INFO:Initializing load_model()
2024-04-30 12:07:15,633:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:15,652:INFO:Initializing predict_model()
2024-04-30 12:07:15,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85984B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11A160>)
2024-04-30 12:07:15,652:INFO:Checking exceptions
2024-04-30 12:07:15,652:INFO:Preloading libraries
2024-04-30 12:07:15,653:INFO:Set up data.
2024-04-30 12:07:15,656:INFO:Set up index.
2024-04-30 12:07:19,768:INFO:Initializing load_model()
2024-04-30 12:07:19,768:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:07:19,785:INFO:Initializing predict_model()
2024-04-30 12:07:19,785:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA714E0>)
2024-04-30 12:07:19,785:INFO:Checking exceptions
2024-04-30 12:07:19,785:INFO:Preloading libraries
2024-04-30 12:07:19,786:INFO:Set up data.
2024-04-30 12:07:19,792:INFO:Set up index.
2024-04-30 12:09:53,743:INFO:Initializing load_model()
2024-04-30 12:09:53,743:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:09:53,773:INFO:Initializing predict_model()
2024-04-30 12:09:53,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947920>)
2024-04-30 12:09:53,773:INFO:Checking exceptions
2024-04-30 12:09:53,773:INFO:Preloading libraries
2024-04-30 12:09:53,774:INFO:Set up data.
2024-04-30 12:09:53,783:INFO:Set up index.
2024-04-30 12:09:56,947:INFO:Initializing load_model()
2024-04-30 12:09:56,947:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:09:56,974:INFO:Initializing predict_model()
2024-04-30 12:09:56,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8555ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85644EA0>)
2024-04-30 12:09:56,974:INFO:Checking exceptions
2024-04-30 12:09:56,974:INFO:Preloading libraries
2024-04-30 12:09:56,974:INFO:Set up data.
2024-04-30 12:09:56,983:INFO:Set up index.
2024-04-30 12:10:11,878:INFO:Initializing load_model()
2024-04-30 12:10:11,878:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:11,899:INFO:Initializing predict_model()
2024-04-30 12:10:11,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A54750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70720>)
2024-04-30 12:10:11,899:INFO:Checking exceptions
2024-04-30 12:10:11,899:INFO:Preloading libraries
2024-04-30 12:10:11,900:INFO:Set up data.
2024-04-30 12:10:11,906:INFO:Set up index.
2024-04-30 12:10:16,010:INFO:Initializing load_model()
2024-04-30 12:10:16,010:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:16,043:INFO:Initializing predict_model()
2024-04-30 12:10:16,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85614A40>)
2024-04-30 12:10:16,044:INFO:Checking exceptions
2024-04-30 12:10:16,044:INFO:Preloading libraries
2024-04-30 12:10:16,044:INFO:Set up data.
2024-04-30 12:10:16,050:INFO:Set up index.
2024-04-30 12:10:19,853:INFO:Initializing load_model()
2024-04-30 12:10:19,853:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:19,880:INFO:Initializing predict_model()
2024-04-30 12:10:19,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A568D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70C20>)
2024-04-30 12:10:19,881:INFO:Checking exceptions
2024-04-30 12:10:19,881:INFO:Preloading libraries
2024-04-30 12:10:19,881:INFO:Set up data.
2024-04-30 12:10:19,888:INFO:Set up index.
2024-04-30 12:10:20,940:INFO:Initializing load_model()
2024-04-30 12:10:20,940:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:10:20,963:INFO:Initializing predict_model()
2024-04-30 12:10:20,963:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDA3E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85945440>)
2024-04-30 12:10:20,963:INFO:Checking exceptions
2024-04-30 12:10:20,963:INFO:Preloading libraries
2024-04-30 12:10:20,964:INFO:Set up data.
2024-04-30 12:10:20,970:INFO:Set up index.
2024-04-30 12:11:19,982:INFO:Initializing load_model()
2024-04-30 12:11:19,982:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:11:19,994:INFO:Initializing predict_model()
2024-04-30 12:11:19,994:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85985350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE075080>)
2024-04-30 12:11:19,994:INFO:Checking exceptions
2024-04-30 12:11:19,994:INFO:Preloading libraries
2024-04-30 12:11:19,994:INFO:Set up data.
2024-04-30 12:11:19,994:INFO:Set up index.
2024-04-30 12:11:26,084:INFO:Initializing load_model()
2024-04-30 12:11:26,084:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:11:26,102:INFO:Initializing predict_model()
2024-04-30 12:11:26,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A558D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11ADE0>)
2024-04-30 12:11:26,107:INFO:Checking exceptions
2024-04-30 12:11:26,107:INFO:Preloading libraries
2024-04-30 12:11:26,107:INFO:Set up data.
2024-04-30 12:11:26,112:INFO:Set up index.
2024-04-30 12:12:17,725:INFO:Initializing load_model()
2024-04-30 12:12:17,725:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:17,745:INFO:Initializing predict_model()
2024-04-30 12:12:17,745:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A859782D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017ADB578D60>)
2024-04-30 12:12:17,745:INFO:Checking exceptions
2024-04-30 12:12:17,745:INFO:Preloading libraries
2024-04-30 12:12:17,746:INFO:Set up data.
2024-04-30 12:12:17,752:INFO:Set up index.
2024-04-30 12:12:22,730:INFO:Initializing load_model()
2024-04-30 12:12:22,730:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:22,758:INFO:Initializing predict_model()
2024-04-30 12:12:22,758:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8557E450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947060>)
2024-04-30 12:12:22,758:INFO:Checking exceptions
2024-04-30 12:12:22,758:INFO:Preloading libraries
2024-04-30 12:12:22,759:INFO:Set up data.
2024-04-30 12:12:22,765:INFO:Set up index.
2024-04-30 12:12:42,638:INFO:Initializing load_model()
2024-04-30 12:12:42,638:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:12:42,668:INFO:Initializing predict_model()
2024-04-30 12:12:42,668:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857CCC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDEC54E0>)
2024-04-30 12:12:42,668:INFO:Checking exceptions
2024-04-30 12:12:42,668:INFO:Preloading libraries
2024-04-30 12:12:42,668:INFO:Set up data.
2024-04-30 12:12:42,675:INFO:Set up index.
2024-04-30 12:13:42,056:INFO:Initializing load_model()
2024-04-30 12:13:42,057:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:42,066:INFO:Initializing predict_model()
2024-04-30 12:13:42,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85984A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A8532C900>)
2024-04-30 12:13:42,066:INFO:Checking exceptions
2024-04-30 12:13:42,066:INFO:Preloading libraries
2024-04-30 12:13:42,066:INFO:Set up data.
2024-04-30 12:13:42,084:INFO:Set up index.
2024-04-30 12:13:48,059:INFO:Initializing load_model()
2024-04-30 12:13:48,059:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:48,077:INFO:Initializing predict_model()
2024-04-30 12:13:48,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963420>)
2024-04-30 12:13:48,078:INFO:Checking exceptions
2024-04-30 12:13:48,078:INFO:Preloading libraries
2024-04-30 12:13:48,078:INFO:Set up data.
2024-04-30 12:13:48,085:INFO:Set up index.
2024-04-30 12:13:52,067:INFO:Initializing load_model()
2024-04-30 12:13:52,067:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:52,099:INFO:Initializing predict_model()
2024-04-30 12:13:52,099:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2C750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA70F40>)
2024-04-30 12:13:52,099:INFO:Checking exceptions
2024-04-30 12:13:52,099:INFO:Preloading libraries
2024-04-30 12:13:52,100:INFO:Set up data.
2024-04-30 12:13:52,108:INFO:Set up index.
2024-04-30 12:13:56,017:INFO:Initializing load_model()
2024-04-30 12:13:56,017:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:13:56,038:INFO:Initializing predict_model()
2024-04-30 12:13:56,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A856505D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960A40>)
2024-04-30 12:13:56,039:INFO:Checking exceptions
2024-04-30 12:13:56,039:INFO:Preloading libraries
2024-04-30 12:13:56,039:INFO:Set up data.
2024-04-30 12:13:56,048:INFO:Set up index.
2024-04-30 12:14:59,019:INFO:Initializing load_model()
2024-04-30 12:14:59,019:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:14:59,054:INFO:Initializing predict_model()
2024-04-30 12:14:59,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85581D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962B60>)
2024-04-30 12:14:59,054:INFO:Checking exceptions
2024-04-30 12:14:59,054:INFO:Preloading libraries
2024-04-30 12:14:59,055:INFO:Set up data.
2024-04-30 12:14:59,057:INFO:Set up index.
2024-04-30 12:15:02,995:INFO:Initializing load_model()
2024-04-30 12:15:02,995:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:03,027:INFO:Initializing predict_model()
2024-04-30 12:15:03,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEF405510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85947740>)
2024-04-30 12:15:03,027:INFO:Checking exceptions
2024-04-30 12:15:03,027:INFO:Preloading libraries
2024-04-30 12:15:03,027:INFO:Set up data.
2024-04-30 12:15:03,034:INFO:Set up index.
2024-04-30 12:15:08,038:INFO:Initializing load_model()
2024-04-30 12:15:08,038:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:08,071:INFO:Initializing predict_model()
2024-04-30 12:15:08,071:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85977410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85946840>)
2024-04-30 12:15:08,071:INFO:Checking exceptions
2024-04-30 12:15:08,071:INFO:Preloading libraries
2024-04-30 12:15:08,072:INFO:Set up data.
2024-04-30 12:15:08,078:INFO:Set up index.
2024-04-30 12:15:10,493:INFO:Initializing load_model()
2024-04-30 12:15:10,493:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:10,516:INFO:Initializing predict_model()
2024-04-30 12:15:10,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A77A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960540>)
2024-04-30 12:15:10,516:INFO:Checking exceptions
2024-04-30 12:15:10,516:INFO:Preloading libraries
2024-04-30 12:15:10,516:INFO:Set up data.
2024-04-30 12:15:10,525:INFO:Set up index.
2024-04-30 12:15:12,021:INFO:Initializing load_model()
2024-04-30 12:15:12,021:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:15:12,040:INFO:Initializing predict_model()
2024-04-30 12:15:12,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017AEDAA4390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963BA0>)
2024-04-30 12:15:12,040:INFO:Checking exceptions
2024-04-30 12:15:12,040:INFO:Preloading libraries
2024-04-30 12:15:12,040:INFO:Set up data.
2024-04-30 12:15:12,047:INFO:Set up index.
2024-04-30 12:16:48,511:INFO:Initializing load_model()
2024-04-30 12:16:48,512:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:16:48,532:INFO:Initializing predict_model()
2024-04-30 12:16:48,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A857BB1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEE11AA20>)
2024-04-30 12:16:48,532:INFO:Checking exceptions
2024-04-30 12:16:48,532:INFO:Preloading libraries
2024-04-30 12:16:48,533:INFO:Set up data.
2024-04-30 12:16:48,540:INFO:Set up index.
2024-04-30 12:17:07,990:INFO:Initializing load_model()
2024-04-30 12:17:07,990:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:08,008:INFO:Initializing predict_model()
2024-04-30 12:17:08,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A83A3A310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71F80>)
2024-04-30 12:17:08,008:INFO:Checking exceptions
2024-04-30 12:17:08,008:INFO:Preloading libraries
2024-04-30 12:17:08,008:INFO:Set up data.
2024-04-30 12:17:08,015:INFO:Set up index.
2024-04-30 12:17:09,712:INFO:Initializing load_model()
2024-04-30 12:17:09,712:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:09,728:INFO:Initializing predict_model()
2024-04-30 12:17:09,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A25210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85963060>)
2024-04-30 12:17:09,729:INFO:Checking exceptions
2024-04-30 12:17:09,729:INFO:Preloading libraries
2024-04-30 12:17:09,729:INFO:Set up data.
2024-04-30 12:17:09,735:INFO:Set up index.
2024-04-30 12:17:10,783:INFO:Initializing load_model()
2024-04-30 12:17:10,783:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:17:10,802:INFO:Initializing predict_model()
2024-04-30 12:17:10,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A67910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A83871760>)
2024-04-30 12:17:10,802:INFO:Checking exceptions
2024-04-30 12:17:10,802:INFO:Preloading libraries
2024-04-30 12:17:10,802:INFO:Set up data.
2024-04-30 12:17:10,809:INFO:Set up index.
2024-04-30 12:18:56,349:INFO:Initializing load_model()
2024-04-30 12:18:56,349:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:18:56,369:INFO:Initializing predict_model()
2024-04-30 12:18:56,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A2EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85960900>)
2024-04-30 12:18:56,369:INFO:Checking exceptions
2024-04-30 12:18:56,369:INFO:Preloading libraries
2024-04-30 12:18:56,370:INFO:Set up data.
2024-04-30 12:18:56,371:INFO:Set up index.
2024-04-30 12:19:19,550:INFO:Initializing load_model()
2024-04-30 12:19:19,550:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:19,570:INFO:Initializing predict_model()
2024-04-30 12:19:19,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85A05210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 12:19:19,571:INFO:Checking exceptions
2024-04-30 12:19:19,571:INFO:Preloading libraries
2024-04-30 12:19:19,571:INFO:Set up data.
2024-04-30 12:19:19,579:INFO:Set up index.
2024-04-30 12:19:36,830:INFO:Initializing load_model()
2024-04-30 12:19:36,830:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:36,847:INFO:Initializing predict_model()
2024-04-30 12:19:36,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A8563FDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A85962520>)
2024-04-30 12:19:36,847:INFO:Checking exceptions
2024-04-30 12:19:36,847:INFO:Preloading libraries
2024-04-30 12:19:36,848:INFO:Set up data.
2024-04-30 12:19:36,855:INFO:Set up index.
2024-04-30 12:19:43,700:INFO:Initializing load_model()
2024-04-30 12:19:43,700:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:19:43,741:INFO:Initializing predict_model()
2024-04-30 12:19:43,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A85959B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017A859477E0>)
2024-04-30 12:19:43,741:INFO:Checking exceptions
2024-04-30 12:19:43,741:INFO:Preloading libraries
2024-04-30 12:19:43,743:INFO:Set up data.
2024-04-30 12:19:43,749:INFO:Set up index.
2024-04-30 12:20:46,233:INFO:Initializing load_model()
2024-04-30 12:20:46,233:INFO:load_model(model_name=AI_model/corrosion_regression_repsol_hybrid, platform=None, authentication=None, verbose=True)
2024-04-30 12:20:46,257:INFO:Initializing predict_model()
2024-04-30 12:20:46,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017A858A7CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crudo_BPPD', 'agua_BAPD',
                                             'gas_MMCFD', 'presion_cabeza_psi',
                                             'temperatura_cabeza_F',
                                             'solidos_PTB', 'cloruros_ppmCl',
                                             'CO2_gas', 'CO2_agua%',
                                             'H2S_gas_%', 'H2S_agua_ppm',
                                             'alcalinidad_ppm', 'magnesio_ppm',
                                             'calcio_ppm', 'sulfatos_ppm',
                                             'dureza_total_ppm', 'hierro_ppm',
                                             'd...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017AEDA71800>)
2024-04-30 12:20:46,258:INFO:Checking exceptions
2024-04-30 12:20:46,258:INFO:Preloading libraries
2024-04-30 12:20:46,258:INFO:Set up data.
2024-04-30 12:20:46,264:INFO:Set up index.
